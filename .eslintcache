[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"4","/Users/bcraig/Desktop/idee/src/components/Card.js":"5","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"6","/Users/bcraig/Desktop/idee/src/components/Button.js":"7","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js":"8","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"9"},{"size":500,"mtime":1606789933533,"results":"10","hashOfConfig":"11"},{"size":2001,"mtime":1611619978796,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606789933534,"results":"13","hashOfConfig":"11"},{"size":2280,"mtime":1611617657308,"results":"14","hashOfConfig":"11"},{"size":3589,"mtime":1611620632498,"results":"15","hashOfConfig":"11"},{"size":3213,"mtime":1611616142960,"results":"16","hashOfConfig":"11"},{"size":807,"mtime":1611619788198,"results":"17","hashOfConfig":"11"},{"size":2463,"mtime":1611619154843,"results":"18","hashOfConfig":"11"},{"size":3287,"mtime":1611527147404,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"s4sshl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/bcraig/Desktop/idee/src/index.js",[],["41","42"],"/Users/bcraig/Desktop/idee/src/App.js",["43"],"/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["44","45","46","47"],"/Users/bcraig/Desktop/idee/src/components/Card.js",["48","49","50"],"/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",["51"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS\n// handle the 400 bad request here to call again\n\nexport const getCredentials = async () => {\n    const client_id = process.env.REACT_APP_BANDCAMP_CLIENT_ID;\n    const client_secret = process.env.REACT_APP_BANDCAMP_CLIENT_SECRET;\n    const dataType = \"json\";\n    const grant_type = \"client_credentials\";\n    const credentials = await axios.post(\n      `/oauth_token`,\n      null,\n      {\n        params: {\n          client_id,\n          client_secret,\n          dataType,\n          grant_type,\n        },\n      }\n    );\n    if(credentials.status === 200) {\n      return credentials;\n    }\n    if(credentials.status === 400) {\n      const retry = await axios.post(\n        `/oauth_token`,\n        null,\n        {\n          params: {\n            client_id,\n            client_secret,\n            dataType,\n            grant_type,\n          },\n        }\n      );\n      return retry;\n    }\n};\n\nexport const getBands = async (token) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    // const bodyParameters = {\n    //   key: \"value\",\n    // };\n    const getBands = await axios.post(\n      \"/api/account/1/my_bands\",\n      null,\n      config\n    );\n    return getBands;\n};\n\nexport const getOrdersUnshipped = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      unshipped_only: true,\n    };\n    const allOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allOrders\n}\n\nexport const getAllRecentOrders = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const oneMonthsAgo = new Date();\n    oneMonthsAgo.setMonth(oneMonthsAgo.getMonth() - 1);\n    const recentDateFrom = `${oneMonthsAgo.getFullYear()}-${oneMonthsAgo.getMonth()}-01`\n    \n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      start_time: recentDateFrom\n    };\n    const allRecentOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allRecentOrders\n}\n\nexport const markAsShipped = async (token, orderToBeShipped, trackingUrl) => {\n  // THIS WORKS DONT USE BECAUSE IT FUCKS SHIT UP, ask alex to make a bunch of fake orders so I can mark as shipped?!?!?!?!\n  // WHEN inducted/released, click buttton that takes all orders that are received and then markAsShipped, inducted on clikc, then send mark as shipped.\n  // \n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const params = {\n    items: [\n      {\n        id: orderToBeShipped.payment_id,\n        id_type: \"p\",\n        shipped: true,\n        tracking_code: trackingUrl,\n        notification: true,\n        notification_message: `Your items will be shipped within 24 hours! Your tracking url is ${trackingUrl}`\n      }\n    ]\n  }\n    \n  return params\n\n  // const shippedOrder = await axios.post(\n  //   \"/api/merchorders/2/update_shipped\",\n  //   params,\n  //   config\n  // );\n  // console.log(shippedOrder, 'ORDER SHIPPED?!?!')\n  // return shippedOrder\n}","/Users/bcraig/Desktop/idee/src/components/Button.js",["52","53"],"/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js",["54"],"/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["55"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS AND DO ERROR HANDLING FOR THE APPLICATION\n\nconst chitChatTkn = process.env.REACT_APP_CHITCHATS_API_SECRET_STAGING\nconst chitChatClientId = process.env.REACT_APP_CHITCHATS_API_CLIENT_ID_STAGING\n\nexport const createShipment = async (orderToBeShipped) => {\n    const {ship_to_name, ship_to_street, ship_to_street_2, ship_to_city, ship_to_state, ship_to_country_code, ship_to_zip, buyer_phone,  buyer_email, sub_total, currency, paypal_id} = await orderToBeShipped\n    // make this dynamic based on what items and how many 0.6 is base each record 0.6,\n    // new sizing dimension for if your shipping clothing.\n    // change rest based on vinyl or other GO BACK TO MVP AND LOOK AT WHAT IS NEEDED\n\n\n\n    const postageType = () => {\n        if(ship_to_country_code === 'CA') {\n            return \"chit_chats_canada_tracked\"\n        } else if(ship_to_country_code === 'US') {\n            return \"usps_media_mail\"\n        } else {\n            return \"asendia_priority_tracked\"\n        }\n    }\n    const postage = postageType()\n\n    const shipmentBody = {\n        name: ship_to_name,\n        address_1: ship_to_street,\n        address_2: ship_to_street_2,\n        city: ship_to_city,\n        province_code: ship_to_state,\n        postal_code: ship_to_zip,\n        country_code: ship_to_country_code,\n        phone: buyer_phone,\n        package_contents: \"merchandise\",\n        description: \"Phonographic Record\",\n        value: sub_total,\n        value_currency: currency,\n        order_store: \"other\",\n        order_id: paypal_id,\n        package_type: \"parcel\",\n        size_x: 33,\n        size_y: 33,\n        size_z: 4,\n        weight: 1.2,\n        size_unit: \"cm\",\n        weight_unit: \"lb\",\n        signature_requested: false,\n        insurance_requested: 'no',\n        ship_date: \"today\",\n        postage_type: postage\n    }\n\n    const res = await axios.post(`/clients/${chitChatClientId}/shipments`,\n    shipmentBody,\n     {\n        headers: {\n            Authorization: chitChatTkn\n        }\n    })\n\n    return {\n        id: res.data.shipment.id,\n        tracking: res.data.shipment.tracking_url,\n        rates: res.data.shipment.rates,\n        name: ship_to_name\n    }\n}\n\nexport const getShipment = async (id) => {\n    const res = await axios.get(`/clients/${chitChatClientId}/shipments/${id}`, {\n        headers: {\n            Authorization: chitChatTkn\n        }  \n    });\n    if(res.status === 200) {\n        return res\n    } else {\n        console.log('HERERERE')\n        return false\n    }\n}\n\nexport const buyShipment = async (shipmentId, postageType = null) => {\n    if(postageType === null) {\n        const res = await axios.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, null, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    } else {\n        const params = {\n            postage_type: postageType\n        }\n        const res = await axios.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, params, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    }\n}\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":46,"nodeType":"62","messageId":"63","endLine":2,"endColumn":59},{"ruleId":"60","severity":1,"message":"64","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"65","line":5,"column":3,"nodeType":"62","messageId":"63","endLine":5,"endColumn":7},{"ruleId":"60","severity":1,"message":"66","line":12,"column":8,"nodeType":"62","messageId":"63","endLine":12,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":16,"column":28,"nodeType":"69","messageId":"70","endLine":16,"endColumn":30},{"ruleId":"60","severity":1,"message":"71","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":15},{"ruleId":"60","severity":1,"message":"72","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":59,"column":8,"nodeType":"75","endLine":59,"endColumn":89,"suggestions":"76"},{"ruleId":"60","severity":1,"message":"77","line":97,"column":9,"nodeType":"62","messageId":"63","endLine":97,"endColumn":15},{"ruleId":"73","severity":1,"message":"78","line":12,"column":8,"nodeType":"75","endLine":12,"endColumn":18,"suggestions":"79"},{"ruleId":"60","severity":1,"message":"80","line":13,"column":11,"nodeType":"62","messageId":"63","endLine":13,"endColumn":20},{"ruleId":"60","severity":1,"message":"61","line":2,"column":27,"nodeType":"62","messageId":"63","endLine":2,"endColumn":40},{"ruleId":"60","severity":1,"message":"81","line":8,"column":138,"nodeType":"62","messageId":"63","endLine":8,"endColumn":149},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Spinner' is defined but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'createShipmentFunc', 'name', 'orderToBeShipped', and 'ship_to_name'. Either include them or remove the dependency array. If 'setName' needs the current value of 'ship_to_name', you can also switch to useReducer instead of useState and read 'ship_to_name' in the reducer.","ArrayExpression",["84"],"'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["85"],"'prevCount' is assigned a value but never used.","'buyer_email' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, ship_to_name, name, createShipmentFunc, orderToBeShipped, addInfo]",{"range":"90","text":"91"},"Update the dependencies array to be: [count, setCount]",{"range":"92","text":"93"},[2438,2519],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, ship_to_name, name, createShipmentFunc, orderToBeShipped, addInfo]",[327,337],"[count, setCount]"]