[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"4","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"5","/Users/bcraig/Desktop/idee/src/components/Card.js":"6","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js":"7","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"8","/Users/bcraig/Desktop/idee/src/components/Button.js":"9"},{"size":500,"mtime":1606789933533,"results":"10","hashOfConfig":"11"},{"size":2377,"mtime":1611532595630,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606789933534,"results":"13","hashOfConfig":"11"},{"size":2871,"mtime":1611515660795,"results":"14","hashOfConfig":"11"},{"size":3287,"mtime":1611527147404,"results":"15","hashOfConfig":"11"},{"size":3376,"mtime":1611528358718,"results":"16","hashOfConfig":"11"},{"size":1756,"mtime":1611521823013,"results":"17","hashOfConfig":"11"},{"size":5139,"mtime":1611534830615,"results":"18","hashOfConfig":"11"},{"size":6668,"mtime":1611532579587,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"s4sshl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"/Users/bcraig/Desktop/idee/src/index.js",[],["45","46"],"/Users/bcraig/Desktop/idee/src/App.js",["47","48","49","50","51"],"import React, { useEffect, useState } from \"react\";\nimport { action, createStore, StoreProvider, useStoreState } from 'easy-peasy'\nimport { getCredentials, getBands, getOrdersUnshipped } from './apis/bandcamp'\nimport { PDFDownloadLink, Document, Page } from '@react-pdf/renderer'\nimport Card from './components/Card'\nimport PdfGenerator from './components/PdfGenerator'\nimport Button from './components/Button'\nimport Spinner from './spinner.gif'\nimport \"./App.css\";\n\nrequire('dotenv').config()\n\nfunction App() {\n  const [unfilledOrders, setUnfilledOrders] = useState(null)\n  const [confirmCreateShipment, setConfirmCreateShipment] = useState(false)\n\n  const store = createStore({\n    pngs: {\n      urls: [],\n      info: [],\n      add: action((state, payload) => {\n        state.urls.push(payload);\n      }),\n      addInfo: action((state, payload) => {\n        state.info.push(payload);\n      }),\n    },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const clientCreds = await getCredentials();\n      const accessTkn = clientCreds?.data.access_token;\n      const bands = await getBands(accessTkn);\n      const ordersUnshipped  = await getOrdersUnshipped(accessTkn, bands)\n      setUnfilledOrders(ordersUnshipped?.data.items)\n    }\n    fetchData()\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <StoreProvider store={store}>\n        <div className=\"toBeShipped\">\n          <h2>Orders To Be Shipped: {unfilledOrders === null ? '' : unfilledOrders.length}</h2>\n          <h3>Create and purchsed shipments for all orders below in chitchats</h3>\n          <button onClick={() => {\n            const result = window.confirm('Are you sure?')\n            setConfirmCreateShipment(result)\n          }}>CLICK HERE</button>\n\n          {unfilledOrders === null ? ( <img src={Spinner} alt=\"\"/>) : unfilledOrders.map((orderToBeShipped, idx) => { \n            return (\n                <Card idx={idx} orderToBeShipped={orderToBeShipped} confirmCreateShipment={confirmCreateShipment} />\n            )\n          })}\n          <Button />\n          {/* <PdfGenerator /> */}\n          {/* <PDFDownloadLink document={<PdfGenerator />} fileName=\"somename.pdf\">\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n          </PDFDownloadLink> */}\n        </div>\n      </StoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",["52"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS\n// handle the 400 bad request here to call again\n\nexport const getCredentials = async () => {\n    const client_id = process.env.REACT_APP_BANDCAMP_CLIENT_ID;\n    const client_secret = process.env.REACT_APP_BANDCAMP_CLIENT_SECRET;\n    const dataType = \"json\";\n    const grant_type = \"client_credentials\";\n    const credentials = await axios.post(\n      `/oauth_token`,\n      null,\n      {\n        params: {\n          client_id,\n          client_secret,\n          dataType,\n          grant_type,\n        },\n      }\n    );\n    return credentials;\n};\n\nexport const getBands = async (token) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    // const bodyParameters = {\n    //   key: \"value\",\n    // };\n    const getBands = await axios.post(\n      \"/api/account/1/my_bands\",\n      null,\n      config\n    );\n    return getBands;\n};\n\nexport const getOrdersUnshipped = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      unshipped_only: true,\n    };\n    const allOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allOrders\n}\n\nexport const getAllRecentOrders = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const oneMonthsAgo = new Date();\n    oneMonthsAgo.setMonth(oneMonthsAgo.getMonth() - 1);\n    const recentDateFrom = `${oneMonthsAgo.getFullYear()}-${oneMonthsAgo.getMonth()}-01`\n    \n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      start_time: recentDateFrom\n    };\n    const allRecentOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allRecentOrders\n}\n\nexport const markAsShipped = async (token, orderToBeShipped, trackingUrl) => {\n  // THIS WORKS DONT USE BECAUSE IT FUCKS SHIT UP, ask alex to make a bunch of fake orders so I can mark as shipped?!?!?!?!\n  // WHEN inducted/released, click buttton that takes all orders that are received and then markAsShipped, inducted on clikc, then send mark as shipped.\n  // \n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const params = {\n    items: [\n      {\n        id: orderToBeShipped.payment_id,\n        id_type: \"p\",\n        shipped: true,\n        tracking_code: trackingUrl,\n        notification: true,\n        notification_message: `Your items will be shipped within 24 hours! Your tracking url is ${trackingUrl}`\n      }\n    ]\n  }\n    \n  return params\n\n  // const shippedOrder = await axios.post(\n  //   \"/api/merchorders/2/update_shipped\",\n  //   params,\n  //   config\n  // );\n  // console.log(shippedOrder, 'ORDER SHIPPED?!?!')\n  // return shippedOrder\n}","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["53"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS AND DO ERROR HANDLING FOR THE APPLICATION\n\nconst chitChatTkn = process.env.REACT_APP_CHITCHATS_API_SECRET_STAGING\nconst chitChatClientId = process.env.REACT_APP_CHITCHATS_API_CLIENT_ID_STAGING\n\nexport const createShipment = async (orderToBeShipped) => {\n    const {ship_to_name, ship_to_street, ship_to_street_2, ship_to_city, ship_to_state, ship_to_country_code, ship_to_zip, buyer_phone,  buyer_email, sub_total, currency, paypal_id} = await orderToBeShipped\n    // make this dynamic based on what items and how many 0.6 is base each record 0.6,\n    // new sizing dimension for if your shipping clothing.\n    // change rest based on vinyl or other GO BACK TO MVP AND LOOK AT WHAT IS NEEDED\n\n\n\n    const postageType = () => {\n        if(ship_to_country_code === 'CA') {\n            return \"chit_chats_canada_tracked\"\n        } else if(ship_to_country_code === 'US') {\n            return \"usps_media_mail\"\n        } else {\n            return \"asendia_priority_tracked\"\n        }\n    }\n    const postage = postageType()\n\n    const shipmentBody = {\n        name: ship_to_name,\n        address_1: ship_to_street,\n        address_2: ship_to_street_2,\n        city: ship_to_city,\n        province_code: ship_to_state,\n        postal_code: ship_to_zip,\n        country_code: ship_to_country_code,\n        phone: buyer_phone,\n        package_contents: \"merchandise\",\n        description: \"Phonographic Record\",\n        value: sub_total,\n        value_currency: currency,\n        order_store: \"other\",\n        order_id: paypal_id,\n        package_type: \"parcel\",\n        size_x: 33,\n        size_y: 33,\n        size_z: 4,\n        weight: 1.2,\n        size_unit: \"cm\",\n        weight_unit: \"lb\",\n        signature_requested: false,\n        insurance_requested: 'no',\n        ship_date: \"today\",\n        postage_type: postage\n    }\n\n    const res = await axios.post(`/clients/${chitChatClientId}/shipments`,\n    shipmentBody,\n     {\n        headers: {\n            Authorization: chitChatTkn\n        }\n    })\n\n    return {\n        id: res.data.shipment.id,\n        tracking: res.data.shipment.tracking_url,\n        rates: res.data.shipment.rates,\n        name: ship_to_name\n    }\n}\n\nexport const getShipment = async (id) => {\n    const res = await axios.get(`/clients/${chitChatClientId}/shipments/${id}`, {\n        headers: {\n            Authorization: chitChatTkn\n        }  \n    });\n    if(res.status === 200) {\n        return res\n    } else {\n        console.log('HERERERE')\n        return false\n    }\n}\n\nexport const buyShipment = async (shipmentId, postageType = null) => {\n    if(postageType === null) {\n        const res = await axios.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, null, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    } else {\n        const params = {\n            postage_type: postageType\n        }\n        const res = await axios.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, params, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    }\n}\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["54","55","56"],"import React, { useState, useEffect } from 'react'\nimport ShipmentRates from './ShipmentRates'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport { createShipment, buyShipment, getShipment } from '../apis/chitchats'\nimport PropTypes from 'prop-types'\n\n\nconst Card = ({ confirmCreateShipment, idx, pdf, orderToBeShipped, orderToBeShipped: { ship_to_country_code, ship_to_name, ship_to_street, ship_to_street_2, ship_to_city, ship_to_state, ship_to_country, ship_to_zip, buyer_email, buyer_phone } }) => {\n    const [rates, setRates] = useState([])\n    const [shipId, setShipId] = useState('')\n    const [name, setName] = useState('')\n    const [invalidRate, setInvalidRate] = useState(false)\n\n    const add = useStoreActions((actions) => actions.pngs.add)\n    const addInfo = useStoreActions((actions) => actions.pngs.addInfo)\n\n    const createShipmentFunc = async (orderToBeShipped) => {\n        let namesOfRates = []\n        const shipment = await createShipment(orderToBeShipped)\n        shipment.rates.map(rate => namesOfRates.push(rate.postage_type))\n        const hasAsendia = namesOfRates.includes('asendia_priority_tracked')\n        setShipId(shipment.id)\n\n        if(!isNorthAmerica && !hasAsendia) {\n            setInvalidRate(true)\n            setRates(shipment.rates)\n        }\n\n        if(shipment.id) {\n            // Include the setTimeout to wait for chitchats, async await fails w 400 on patch\n            // COULD REFACTOR THE INSIDE TO ASYNC AWAIT\n            setTimeout(() => {\n                const shipmentBought = buyShipment(shipment.id)\n                shipmentBought.then(res => {\n                    if(res) {\n                        setTimeout(() => {\n                            const getShipmentInfo = getShipment(shipment.id)\n                            getShipmentInfo.then(info => {\n                                console.log(info.data.shipment.postage_label_png_url)\n                                add(info.data.shipment.postage_label_png_url)\n                            })\n                        }, 10000)\n                    }\n                })\n            }, 9000)\n        }\n    }\n\n    useEffect(() => {\n        setName(ship_to_name)\n        if(name && confirmCreateShipment) {\n            createShipmentFunc(orderToBeShipped)\n            addInfo(orderToBeShipped)\n        }\n    }, [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate])\n\n    const isNorthAmerica = ship_to_country_code === 'CA' || ship_to_country_code === 'US'\n\n    return (\n        <div key={idx} className={`order ${confirmCreateShipment && !invalidRate ? 'selected' : 'error'}`}>\n        <p>Name: {ship_to_name}</p>\n        <p>Address: {ship_to_street}</p>\n        {ship_to_street_2 !== null ?  <p>Address2: {ship_to_street_2}</p> : '' }\n        <p>City: {ship_to_city}</p>\n        <p>State/Province: {ship_to_state}</p>\n        <p>Country: {ship_to_country}</p>\n        <p>Zip-Postal: {ship_to_zip}</p>\n        <p>Phone: {buyer_phone}</p>\n        <p>Email: {buyer_email}</p>\n        {!isNorthAmerica ? <ShipmentRates idx={idx} shipId={shipId} rates={rates} /> : ''}\n        {/* <button className=\"btn\" onClick={async (e) => {\n            // const test = await markAsShipped(token, orderToBeShipped, shipment.tracking)\n        }}>Create & Buy Shipment</button> */}\n        </div>\n    )\n}\n\nCard.propTypes = {\n\n}\n\nexport default Card\n\n","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js",["57","58"],"import React, { useEffect, useState } from 'react'\nimport { buyShipment } from '../apis/chitchats'\n\nconst ShipmentRates = ({ rates, shipId, idx }) => {\n    let namesOfRates = []\n    rates.map(rate => namesOfRates.push(rate.postage_type))\n    const hasAsendia = namesOfRates.includes('asendia_priority_tracked')\n\n    const [rate, setRate] = useState('')\n    const [shipmentBought, setShipmentBought] = useState(false)\n\n    useEffect(() => {\n    }, [hasAsendia, rates, rate, setShipmentBought])\n\n    return (\n        <>\n        {rates.length !== 0 && !hasAsendia && !shipmentBought ? (\n            <div className='selectShipment'>\n                <h3>Please select an alternative shipment rate, asendia priority tracked unavailable</h3>\n                <label htmlFor=\"rates\">Choose a shipment rate:</label>\n                <select name=\"rates\" id=\"rates\" onChange={(e) => {\n                    setRate(e.target.value)\n                }}>\n                {rates.length !== 0 && rates.map(rate => {\n                    return <option value={rate.postage_type}>{rate.postage_type}</option>\n                })}\n                </select>\n                <button onClick={async () => {\n                    const shipmentBought = await buyShipment(shipId, rate)\n                    setShipmentBought(true)\n                    const errorBoxes = Array.from(document.getElementsByClassName('error'))\n                    errorBoxes.map(error => {\n                        if(Array.from(error.children).length === 9) {\n                            error.style.display = 'none'\n                        }\n                    })\n                }}>Buy shipment with selected rate</button>\n            </div>\n        ) : ''}\n        </>\n    )\n}\n\nexport default ShipmentRates","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["59","60","61"],"/Users/bcraig/Desktop/idee/src/components/Button.js",["62","63","64"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useStoreState } from 'easy-peasy'\nimport PdfGenerator from '../components/PdfGenerator'\n\n\n\nconst Button = () => {\n    const [count, setCount] = useState(0);\n    const prevCountRef = useRef();\n    useEffect(() => {\n        prevCountRef.current = count;\n    }, [setCount]);\n    const prevCount = prevCountRef.current;\n\n    // let todo = useStoreState((state) => state.pngs.urls);\n    // let todoInfo = useStoreState((state) => state.pngs.info);\n\n    // console.log(todo)\n    // console.log(todoInfo)\n\n    const todo = [\"https://staging.chitchats.com/labels/shipments/t65e86z7p3.png\", \"https://staging.chitchats.com/labels/shipments/p7a932d2b1.png\", \"https://staging.chitchats.com/labels/shipments/t4f2s03j8r.png\", \"https://staging.chitchats.com/labels/shipments/j0810d1s1u.png\", \"https://staging.chitchats.com/labels/shipments/a51d2g6m3t.png\", \"https://staging.chitchats.com/labels/shipments/h2s55e6j8j.png\", \"https://staging.chitchats.com/labels/shipments/t133e0q1s2.png\", \"https://staging.chitchats.com/labels/shipments/d6q5w40w6b.png\", \"https://staging.chitchats.com/labels/shipments/s94r5x4x6u.png\", \"https://staging.chitchats.com/labels/shipments/v3n7m5w3b9.png\", \"https://staging.chitchats.com/labels/shipments/w269b2n0j8.png\", \"https://staging.chitchats.com/labels/shipments/n14f9f7904.png\", \"https://staging.chitchats.com/labels/shipments/d7i72b4r9g.png\", \"https://staging.chitchats.com/labels/shipments/c0z4k7h6a3.png\"]\n\n    const todoInfo = {\n        0: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        1: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        2: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        3: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        4: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        5: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        6: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        7: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        8: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        9: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        10: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        11: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        12: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        },\n        13: {\n            artist: \"Shabason, Krgovich & Harris\",\n            buyer_email: \"chrisherscovitch@gmail.com\",\n            buyer_name: \"chris herscovitch\",\n            nullbuyer_phone: \"+61 402909754\",\n            currency: \"CAD\",\n            item_name: \"Philadelphia: Limited Edition 12 Vinyl LP by Shabason etc.\" \n        }\n    }\n\n    return (\n        <>\n        <button onClick={() => {\n            setCount(prevState => prevState + 1)\n            console.log(todo)\n            console.log(todoInfo)\n        }}>\n            Create shipping pdf/packing download\n        </button>\n        {count > 0 && (<PdfGenerator todo={todo} todoInfo={todoInfo} />)}\n        </>\n    )\n}\n\nexport default Button",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":46,"nodeType":"71","messageId":"72","endLine":2,"endColumn":59},{"ruleId":"69","severity":1,"message":"73","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":25},{"ruleId":"69","severity":1,"message":"74","line":4,"column":27,"nodeType":"71","messageId":"72","endLine":4,"endColumn":35},{"ruleId":"69","severity":1,"message":"75","line":4,"column":37,"nodeType":"71","messageId":"72","endLine":4,"endColumn":41},{"ruleId":"69","severity":1,"message":"76","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":20},{"ruleId":"69","severity":1,"message":"77","line":80,"column":9,"nodeType":"71","messageId":"72","endLine":80,"endColumn":15},{"ruleId":"69","severity":1,"message":"78","line":8,"column":138,"nodeType":"71","messageId":"72","endLine":8,"endColumn":149},{"ruleId":"69","severity":1,"message":"70","line":3,"column":27,"nodeType":"71","messageId":"72","endLine":3,"endColumn":40},{"ruleId":"69","severity":1,"message":"79","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":55,"column":8,"nodeType":"82","endLine":55,"endColumn":77,"suggestions":"83"},{"ruleId":"69","severity":1,"message":"84","line":29,"column":27,"nodeType":"71","messageId":"72","endLine":29,"endColumn":41},{"ruleId":"85","severity":1,"message":"86","line":32,"column":42,"nodeType":"87","messageId":"88","endLine":32,"endColumn":44},{"ruleId":"69","severity":1,"message":"89","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"90","line":2,"column":22,"nodeType":"71","messageId":"72","endLine":2,"endColumn":26},{"ruleId":"69","severity":1,"message":"91","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":12},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":23},{"ruleId":"80","severity":1,"message":"92","line":12,"column":8,"nodeType":"82","endLine":12,"endColumn":18,"suggestions":"93"},{"ruleId":"69","severity":1,"message":"94","line":13,"column":11,"nodeType":"71","messageId":"72","endLine":13,"endColumn":20},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'PDFDownloadLink' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'PdfGenerator' is defined but never used.","'config' is assigned a value but never used.","'buyer_email' is assigned a value but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'createShipmentFunc', 'name', 'orderToBeShipped', and 'ship_to_name'. Either include them or remove the dependency array. If 'setName' needs the current value of 'ship_to_name', you can also switch to useReducer instead of useState and read 'ship_to_name' in the reducer.","ArrayExpression",["97"],"'shipmentBought' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["98"],"'prevCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, ship_to_name, name, createShipmentFunc, orderToBeShipped, addInfo]",{"range":"103","text":"104"},"Update the dependencies array to be: [count, setCount]",{"range":"105","text":"106"},[2339,2408],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, ship_to_name, name, createShipmentFunc, orderToBeShipped, addInfo]",[327,337],"[count, setCount]"]