[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"4","/Users/bcraig/Desktop/idee/src/components/Card.js":"5","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"6","/Users/bcraig/Desktop/idee/src/components/Button.js":"7","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"8","/Users/bcraig/Desktop/idee/src/apis/axios.js":"9","/Users/bcraig/Desktop/idee/src/components/BandcampButton.js":"10","/Users/bcraig/Desktop/idee/src/apis/webflow.js":"11","/Users/bcraig/Desktop/idee/src/components/WebflowCard.js":"12","/Users/bcraig/Desktop/idee/src/components/PdfGeneratorWebflow.js":"13","/Users/bcraig/Desktop/idee/src/components/WebflowButton.js":"14"},{"size":500,"mtime":1606789933533,"results":"15","hashOfConfig":"16"},{"size":5991,"mtime":1615936365598,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1606789933534,"results":"18","hashOfConfig":"16"},{"size":2410,"mtime":1615933327196,"results":"19","hashOfConfig":"16"},{"size":4994,"mtime":1615937992624,"results":"20","hashOfConfig":"16"},{"size":2625,"mtime":1614537925244,"results":"21","hashOfConfig":"16"},{"size":1064,"mtime":1615933177752,"results":"22","hashOfConfig":"16"},{"size":11137,"mtime":1615937986059,"results":"23","hashOfConfig":"16"},{"size":852,"mtime":1612107441090,"results":"24","hashOfConfig":"16"},{"size":1296,"mtime":1615933512325,"results":"25","hashOfConfig":"16"},{"size":1068,"mtime":1614547324281,"results":"26","hashOfConfig":"16"},{"size":4171,"mtime":1614547993176,"results":"27","hashOfConfig":"16"},{"size":2307,"mtime":1614545780658,"results":"28","hashOfConfig":"16"},{"size":991,"mtime":1614547426953,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"s4sshl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"32"},"/Users/bcraig/Desktop/idee/src/index.js",[],["69","70"],"/Users/bcraig/Desktop/idee/src/App.js",["71","72","73","74"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { action, createStore, StoreProvider, useStoreState } from \"easy-peasy\";\nimport { getCredentials, getBands, getOrdersUnshipped } from \"./apis/bandcamp\";\nimport { getAllShipments } from \"./apis/chitchats\";\nimport { getOrdersUnshippedWebflow } from './apis/webflow'\n\nimport Card from \"./components/Card\";\nimport WebflowCard from \"./components/WebflowCard\";\nimport Button from \"./components/Button\";\nimport BandcampButton from \"./components/BandcampButton\";\nimport WebflowButton from \"./components/WebflowButton\";\nimport Spinner from \"./logoidee.svg\";\nimport \"./App.css\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {  \n  const [unfilledOrders, setUnfilledOrders] = useState(null);\n  const [unfilledWebflowOrders, setUnfilledWebflowOrders] = useState(null);\n  const [confirmCreateShipment, setConfirmCreateShipment] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [getShip, setGetShip] = useState(null);\n  const [bandcampError, setBandcampError] = useState(false);\n\n  const store = createStore({\n    pngs: {\n      urls: [],\n      info: [],\n      add: action((state, payload) => {\n        state.urls.push(payload);\n      }),\n      addInfo: action((state, payload) => {\n        state.info.push(payload);\n      }),\n    },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const webflowOrders = await getOrdersUnshippedWebflow()\n      setUnfilledWebflowOrders(webflowOrders)\n\n      const ship = await getAllShipments();\n      setGetShip(ship);\n      const clientCreds = await getCredentials();\n      if (clientCreds === \"error\") {\n        setBandcampError(true);\n      } else {\n        const accessTkn = clientCreds?.data.access_token;\n        setToken(accessTkn);\n        const bands = await getBands(accessTkn);\n        const ordersUnshipped = await getOrdersUnshipped(accessTkn, bands);\n        const result = ordersUnshipped.data.items.reduce(function (r, a) {\n          r[a.payment_id] = r[a.payment_id] || [];\n          r[a.payment_id].push(a);\n          return r;\n        }, Object.create(null));\n        const sortedByPaymentId = Object.values(result);\n        const filteredOutSkip = sortedByPaymentId.filter(order => order[0].ship_notes === null || order[0].ship_notes.indexOf(\"skip\") === -1)\n        setUnfilledOrders(filteredOutSkip);\n      }\n    }\n    fetchData();\n  \n\n  }, [setToken, setUnfilledOrders, setGetShip, setBandcampError]);\n\n  if (bandcampError) {\n    window.location.reload();\n    return <h2>Error with Bandcamp API Secret, Please Refresh</h2>;\n  }\n\n  if (unfilledOrders === null) {\n    return (\n      <div className=\"loadingDisplay\">\n        <h2>Gathering Unshipped Orders</h2>\n        <img src={Spinner} alt=\"\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Switch>\n      <StoreProvider store={store}>\n        <div className=\"toBeShipped\">\n          <nav>\n            <ul>\n               <li><a href=\"/bandcamp\">Bandcamp Orders</a></li>\n              <li><a href=\"/webflow\">Webflow Orders</a></li>\n          </ul>\n        </nav>\n          \n        \n          <Route path=\"/bandcamp\">\n            <h2>\n              Orders To Be Shipped:{\" \"}\n              {unfilledOrders === null ? \"\" : unfilledOrders.length}\n            </h2>\n            <div className=\"btn\">\n              <button\n                onClick={() => {\n                  const result = window.confirm(\"Select all shipments?\");\n                  setConfirmCreateShipment(result);\n                }}\n              >\n                Select All Shipments For Processing\n              </button>\n            </div>\n            <div className=\"orderFlex\">\n              {unfilledOrders &&\n                unfilledOrders.map((orderToBeShipped, idx) => {\n                  return (\n                    <Card\n                      key={orderToBeShipped[0].sale_item_id}\n                      orderToBeShipped={orderToBeShipped}\n                      idx={idx}\n                      shipments={getShip}\n                      confirmCreateShipment={confirmCreateShipment}\n                    />\n                  );\n                })}\n            </div>\n            <div className=\"serious\">\n              <Button />\n              <BandcampButton\n                unfilledOrders={unfilledOrders}\n                token={token}\n                shipments={getShip}\n              />\n            </div>\n          </Route>\n\n          {/* <Route path=\"/webflow\">\n            <div className=\"orderFlex\">\n              <h2>\n              Orders To Be Shipped:{\" \"}\n              {unfilledWebflowOrders === null ? \"\" : unfilledWebflowOrders.data.length}\n              </h2>\n              <div className=\"btn\">\n                <button\n                  onClick={() => {\n                    const result = window.confirm(\"Select all shipments?\");\n                    setConfirmCreateShipment(result);\n                  }}\n                >\n                  Select All Shipments For Processing\n                </button>\n              </div>\n              {unfilledWebflowOrders &&\n                unfilledWebflowOrders.data.map((orderToBeShipped, idx) => {\n                  return (\n                    <WebflowCard\n                      key={orderToBeShipped.orderId}\n                      orderToBeShipped={orderToBeShipped}\n                      idx={idx}\n                      shipments={getShip}\n                      confirmCreateShipment={confirmCreateShipment}\n                    />\n                  );\n                })}\n            </div>\n            <div className=\"serious\">\n              <Button webflow />\n              <WebflowButton\n                unfilledOrders={unfilledWebflowOrders}\n                shipments={getShip}\n              />\n            </div>\n          </Route> */}\n\n        </div>\n      </StoreProvider>\n      </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["75","76","77","78"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\nconst PdfGenerator = ({ urls, info }) => {\n  \n  info.map((order, i) => {\n    order.url = urls[i];\n  });\n\n  const PdfIdee = () => {\n    return (\n      <Document>\n        {info.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              {order.map((item) => {\n                if (item.quantity > 1) {\n                  return (\n                    <Text\n                      style={styles.highlight}\n                    >{`Quanity: ${item.quantity}, Item: ${item.option !== null ? item.option : ''} - ${item.item_name}`}</Text>\n                  );\n                } else {\n                  return (\n                    <Text\n                      style={styles.text}\n                    >{`Quanity: ${item.quantity}, Item:  ${item.option !== null ? item.option : ''} - ${item.item_name}`}</Text>\n                  );\n                }\n              })}\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n      paddingVertical: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n      marginTop: 100,\n    },\n    highlight: {\n      backgroundColor: \"yellow\",\n      color: \"red\",\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    text: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    image: {\n      marginVertical: -100,\n      marginHorizontal: 150,\n      transform: \"rotate(90deg)\",\n      height: 500,\n      width: 300\n    },\n  });\n  const todayDate = new Date().toISOString().slice(0,10);\n\n  return (\n    <PDFDownloadLink document={<PdfIdee />} fileName={`${todayDate}.pdf`}>\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  );\n};\n\nexport default PdfGenerator;\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["79","80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport { useStoreActions } from \"easy-peasy\";\nimport { createShipment, buyShipment, getShipment } from \"../apis/chitchats\";\nimport Spinner from \"../logoidee.svg\";\nimport PropTypes from \"prop-types\";\n\nconst Card = ({ confirmCreateShipment, orderToBeShipped, idx, shipments }) => {\n  const [rates, setRates] = useState([]);\n  const [shipId, setShipId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [invalidRate, setInvalidRate] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [noShow, setNoShow] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n  const [preorder, setPreorder] = useState(false);\n  const [cannotProcess, setCannotProcess] = useState(false);\n\n\n  const handleClick = () => setChecked(!checked);\n\n  const add = useStoreActions((actions) => actions.pngs.add);\n  const addInfo = useStoreActions((actions) => actions.pngs.addInfo);\n\n  const item = orderToBeShipped.map((item) => {\n    return (\n      <li key={item.sale_item_id}>\n        <span className={item.quantity > 1 ? \"highlight\" : \"\"}>\n          {item.quantity}{\" \"}\n        </span>\n        {item.item_name}\n      </li>\n    );\n  });\n\n  const createShipmentFunc = async (orderToBeShipped) => {\n    const shipment = await createShipment(orderToBeShipped);\n    if(shipment === \"Something went wrong\") {\n      setCannotProcess(true)\n    } else {\n      if (shipment.id) {\n        setLoading(true);\n        setTimeout(() => {\n          const shipmentBought = buyShipment(shipment.id);\n          shipmentBought.then((res) => {\n            if (res) {\n              setTimeout(() => {\n                const getShipmentInfo = getShipment(shipment.id);\n                getShipmentInfo.then((info) => {\n                  setLoading(false);\n                  add(info.data.shipment.postage_label_png_url);\n                  setComplete(true);\n                });\n              }, 10000);\n            }\n          });\n        }, 9000);\n      }\n    }\n  };\n\n  useEffect(() => {\n    orderToBeShipped.map((item) => {\n      if(item.item_name.includes(\"(Pre-order)\")) {\n        setPreorder(true)\n      }\n    })\n      \n    if (confirmCreateShipment) {\n      setChecked(true);\n    }\n    if (checked) {\n      createShipmentFunc(orderToBeShipped);\n      addInfo(orderToBeShipped);\n    }\n    // REMOVE FOR STAGING HERE\n    if (shipments) {\n      shipments.data.map((test) => {\n        if (parseInt(test.order_id) === orderToBeShipped[0].payment_id) {\n          if(test.status == \"refund_approved\") {\n            setNoShow(false);\n          }\n          setNoShow(true);\n        }\n      });\n    }\n  }, [\n    setRates,\n    setShipId,\n    confirmCreateShipment,\n    setName,\n    setInvalidRate,\n    setLoading,\n    setChecked,\n    checked,\n    setComplete,\n    setNoShow,\n    setConfirm,\n    setPreorder\n  ]);\n\n  if(cannotProcess) {\n    return (\n      <div key={orderToBeShipped[0].sale_item_id} className={`order manual-complete`}>\n        <p>Name: {orderToBeShipped[0].ship_to_name}</p>\n        <p>Country: {orderToBeShipped[0].ship_to_country}</p>\n        <div className=\"flexContainer\">\n          <p>Items</p>\n          <ul>{item}</ul>\n        </div>\n      </div>\n    );\n  }\n\n  if(preorder) {\n    return (\n        <div key={orderToBeShipped[0].sale_item_id} className={`order blank-out`}>\n          <p>Name: {orderToBeShipped[0].ship_to_name}</p>\n          <p>Country: {orderToBeShipped[0].ship_to_country}</p>\n          <div className=\"flexContainer\">\n            <p>Items</p>\n            <ul>{item}</ul>\n          </div>\n        </div>\n      );\n  }\n\n  if (noShow) {\n    return (\n      <div key={orderToBeShipped[0].sale_item_id} className={`order complete`}>\n        <p>Name: {orderToBeShipped[0].ship_to_name}</p>\n        <p>Country: {orderToBeShipped[0].ship_to_country}</p>\n        <div className=\"flexContainer\">\n          <p>Items</p>\n          <ul>{item}</ul>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"order\">\n        <img src={Spinner} alt=\"\" />\n      </div>\n    )\n  } else {\n    return (\n      <div\n        key={orderToBeShipped[0].sale_item_id}\n        className={`order ${complete ? \"complete\" : \"\"}`}\n      >\n        <p>Name: {orderToBeShipped[0].ship_to_name}</p>\n        <p>Country: {orderToBeShipped[0].ship_to_country}</p>\n        <div className=\"flexContainer\">\n          <ul>{item}</ul>\n        </div>\n        <div className=\"individualShip\">\n          <>\n              <p className=\"tinyText\">Process Individual Shipment</p>\n              <input\n                className=\"checkbox\"\n                onClick={handleClick}\n                onChange={() => (confirmCreateShipment = true)}\n                checked={checked}\n                type=\"checkbox\"\n              />\n          </>\n        </div>\n      </div>\n    );\n  }\n};\n\nCard.propTypes = {};\n\nexport default Card;\n","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",[],"/Users/bcraig/Desktop/idee/src/components/Button.js",["89","90"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport PdfGenerator from \"../components/PdfGenerator\";\nimport PdfGeneratorWebflow from \"../components/PdfGeneratorWebflow\";\n\n\nconst Button = ({ webflow }) => {\n  const [count, setCount] = useState(0);\n  const [confirm, setConfirm] = useState(true);\n  const prevCountRef = useRef();\n  useEffect(() => {\n    prevCountRef.current = count;\n  }, [setCount, setConfirm]);\n  const prevCount = prevCountRef.current;\n\n  let urls = useStoreState((state) => state.pngs.urls);\n  let info = useStoreState((state) => state.pngs.info);\n\n  return (\n    <div className=\"pdfGeneration\">\n      <button\n        onClick={() => {\n          setCount((prevState) => prevState + 1)\n        }}\n      >\n        Create Shipping Download For All Orders\n      </button>\n      {webflow && count > 0 && confirm && <PdfGeneratorWebflow urls={urls} info={info} /> }\n      {!webflow && count > 0 && confirm && <PdfGenerator urls={urls} info={info} />}\n    </div>\n  );\n};\n\nexport default Button;\n","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["91","92","93","94","95","96","97"],"import axios from \"axios\";\nimport axiosWithDelimiterFile from \"../apis/axios\";\n\nconst chitChatTkn = process.env.REACT_APP_CHITCHATS_API_SECRET;\nconst chitChatClientId = process.env.REACT_APP_CHITCHATS_API_CLIENT_ID;\n// STAGING CHANGE HERE ENV AS WELL BAND CAMP INFO\n\nexport const createShipmentWebflow = async (orderToBeShipped) => {\n  try {\n    let postageType = () => {\n      if (orderToBeShipped.shippingAddress.country === \"SI\") {\n        return \"usps_first_class_package_international_service\";\n      } else if (orderToBeShipped.shippingAddress.country === \"CA\") {\n        return \"chit_chats_canada_tracked\";\n      } else if (orderToBeShipped.shippingAddress.country === \"US\") {\n        return \"usps_media_mail\";\n      } else {\n        return \"asendia_priority_tracked\";\n      }\n    };\n\n    let postage = postageType();\n\n    let tshirt = false;\n    let vinyl = false;\n    let cassette = false;\n    let sizeX;\n    let sizeY;\n    let sizeZ;\n\n    const description = orderToBeShipped.purchasedItems.map((item) => {\n\n      if (item.variantSKU.indexOf(\"LP\") > -1) {\n        vinyl = true;\n      } else if (item.variantSKU.indexOf(\"TS\") > -1) {\n        tshirt = true;\n      } else if (item.variantSKU.indexOf(\"CS\") > -1) {\n        cassette = true;\n      }\n\n      if (vinyl && tshirt && !cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record & T-Shirt\";\n      }\n\n      if (vinyl && !tshirt && !cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record\";\n      }\n\n      if (tshirt && !vinyl && !cassette) {\n        sizeX = 26;\n        sizeY = 34;\n        sizeZ = 4;\n        return \"T-Shirt\";\n      }\n\n      if(!tshirt && !vinyl && cassette) {\n        sizeX = 8;\n        sizeY = 14;\n        sizeZ = 3;\n        return \"Cassette\";\n      }\n\n      if(tshirt && !vinyl && cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"T-Shirt & Cassette\";\n      }\n\n      if(!tshirt && vinyl && cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record & Cassette\";\n      }\n\n      if(tshirt && vinyl && cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record & T-Shirt & Cassette\";\n      }\n    });\n\n    let total = 0;\n    const amount = orderToBeShipped.purchasedItems.map((item) => (total += item.count));\n    const totalAmount = total * 25;\n    // // WITH CASSETTE\n    if(cassette && !vinyl && !tshirt) {\n      sizeZ = 3 * orderToBeShipped.purchasedItemsCount\n    }\n    if(cassette && vinyl && total <= 2 && !tshirt) {\n      sizeZ = 4\n    }\n    if(cassette && vinyl && total > 2) {\n      sizeZ = 13\n    }\n    // NO CASETTE\n    if (total < 4 && !cassette) {\n      sizeZ = 4;\n    } else if (total >= 4 && total <= 20 && !cassette) {\n      sizeZ = 13;\n    } else if (total > 20 && !cassette) {\n      sizeZ = 27;\n    }\n\n    const weight = () => {\n      let totalWeight = 0;\n      let vinylAmount = 0;\n      let tShirtAmount = 0;\n      let cassetteAmount = 0;\n      orderToBeShipped.purchasedItems.map((item) => {\n        if (item.variantSKU.indexOf(\"LP\") > -1) {\n          vinylAmount += item.count;\n        } else if (item.variantSKU.indexOf(\"TS\") > -1) {\n          tShirtAmount += item.count;\n        } else if (item.variantSKU.indexOf(\"CS\") > -1) {\n          cassetteAmount += item.count;\n        }\n      });\n      if (vinylAmount > 0) {\n        totalWeight += 0.6;\n      }\n      totalWeight += vinylAmount * 0.6;\n      totalWeight += tShirtAmount * 0.23;\n      totalWeight += cassetteAmount * 0.3;\n      return totalWeight;\n    };\n\n    let shipmentBody = {\n      name: orderToBeShipped.shippingAddress.addressee,\n      address_1: orderToBeShipped.shippingAddress.line1,\n      address_2: orderToBeShipped.shippingAddress.line2,\n      city: orderToBeShipped.shippingAddress.city,\n      province_code: orderToBeShipped.shippingAddress.state,\n      postal_code: orderToBeShipped.shippingAddress.postalCode,\n      country_code: orderToBeShipped.shippingAddress.country,\n      package_contents: \"merchandise\",\n      description: description.slice(-1)[0],\n      value: totalAmount,\n      value_currency: orderToBeShipped.netAmount.unit,\n      order_store: \"other\",\n      order_id: orderToBeShipped.orderId,\n      package_type: \"parcel\",\n      size_x: sizeX,\n      size_y: sizeY,\n      size_z: sizeZ,\n      weight: weight().toFixed(2),\n      size_unit: \"cm\",\n      weight_unit: \"lb\",\n      signature_requested: false,\n      insurance_requested: \"no\",\n      ship_date: \"today\",\n      postage_type: postage,\n    };\n\n    const res = await axiosWithDelimiterFile.post(\n      `/clients/${chitChatClientId}/shipments`,\n      shipmentBody,\n      {\n        headers: {\n          Authorization: chitChatTkn,\n        },\n      }\n    );\n\n    return {\n      id: res.data.shipment.id,\n      tracking: res.data.shipment.tracking_url,\n      rates: res.data.shipment.rates,\n      name: orderToBeShipped.shippingAddress.addressee,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createShipment = async (orderToBeShipped) => {\n  try {\n    let postageType = () => {\n      if (orderToBeShipped[0].ship_to_country_code === \"SI\" || orderToBeShipped[0].ship_to_country_code === \"HR\") {\n        return \"usps_first_class_package_international_service\";\n      } else if (orderToBeShipped[0].ship_to_country_code === \"CA\") {\n        return \"chit_chats_canada_tracked\";\n      } else if (orderToBeShipped[0].ship_to_country_code === \"US\") {\n        return \"usps_media_mail\";\n      } else {\n        return \"asendia_priority_tracked\";\n      }\n    };\n\n    let postage = postageType();\n\n    let tshirt = false;\n    let vinyl = false;\n    let cassette = false;\n    let sizeX;\n    let sizeY;\n    let sizeZ;\n\n    const description = orderToBeShipped.map((order) => {\n      if (order.item_name.indexOf(\"Vinyl\") > -1) {\n        vinyl = true;\n      } else if (order.item_name.indexOf(\"T-Shirt\") > -1 || order.item_name.indexOf(\"T-shirt\") > -1) {\n        tshirt = true;\n      } else if (order.item_name.indexOf(\"Cassette\") > -1) {\n        cassette = true;\n      }\n\n      if (vinyl && tshirt && !cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record & T-Shirt\";\n      }\n\n      if (vinyl && !tshirt && !cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record\";\n      }\n\n      if (tshirt && !vinyl && !cassette) {\n        sizeX = 26;\n        sizeY = 34;\n        sizeZ = 4;\n        return \"T-Shirt\";\n      }\n\n      if(!tshirt && !vinyl && cassette) {\n        sizeX = 8;\n        sizeY = 14;\n        sizeZ = 3;\n        return \"Cassette\";\n      }\n\n      if(tshirt && !vinyl && cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"T-Shirt & Cassette\";\n      }\n\n      if(!tshirt && vinyl && cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record & Cassette\";\n      }\n\n      if(tshirt && vinyl && cassette) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record & T-Shirt & Cassette\";\n      }\n    });\n\n    let total = 0;\n    const amount = orderToBeShipped.map((order) => (total += order.quantity));\n    const totalAmount = total * 25;\n    // WITH CASSETTE\n    if(cassette && !vinyl && !tshirt) {\n      sizeZ = 3 * orderToBeShipped[0].quantity\n    }\n    if(cassette && vinyl && total <= 2 && !tshirt) {\n      sizeZ = 4\n    }\n    if(cassette && vinyl && total > 2) {\n      sizeZ = 13\n    }\n    // NO CASETTE\n    if (total < 4 && !cassette) {\n      sizeZ = 4;\n    } else if (total >= 4 && total <= 20 && !cassette) {\n      sizeZ = 13;\n    } else if (total > 20 && !cassette) {\n      sizeZ = 27;\n    }\n\n    const weight = () => {\n      let totalWeight = 0;\n      let vinylAmount = 0;\n      let tShirtAmount = 0;\n      let cassetteAmount = 0;\n      orderToBeShipped.map((order) => {\n        if (order.item_name.indexOf(\"Vinyl\") > -1) {\n          vinylAmount += order.quantity;\n        } else if (order.item_name.indexOf(\"T-Shirt\") > -1 || order.item_name.indexOf(\"T-shirt\") > -1) {\n          tShirtAmount += order.quantity;\n        } else if (order.item_name.indexOf(\"Cassette\") > -1) {\n          cassetteAmount += order.quantity;\n        }\n      });\n      if (vinylAmount > 0) {\n        totalWeight += 0.6;\n      }\n      totalWeight += vinylAmount * 0.6;\n      totalWeight += tShirtAmount * 0.23;\n      totalWeight += cassetteAmount * 0.3;\n      return totalWeight;\n    };\n\n    let shipmentBody = {\n      name: orderToBeShipped[0].ship_to_name,\n      address_1: orderToBeShipped[0].ship_to_street,\n      address_2: orderToBeShipped[0].ship_to_street_2,\n      city: orderToBeShipped[0].ship_to_city,\n      province_code: orderToBeShipped[0].ship_to_state,\n      postal_code: orderToBeShipped[0].ship_to_zip,\n      country_code: orderToBeShipped[0].ship_to_country_code,\n      phone: orderToBeShipped[0].buyer_phone,\n      package_contents: \"merchandise\",\n      description: description.slice(-1)[0],\n      value: totalAmount,\n      value_currency: orderToBeShipped[0].currency,\n      order_store: \"other\",\n      order_id: orderToBeShipped[0].payment_id,\n      package_type: \"parcel\",\n      size_x: sizeX,\n      size_y: sizeY,\n      size_z: sizeZ,\n      weight: weight().toFixed(2),\n      size_unit: \"cm\",\n      weight_unit: \"lb\",\n      signature_requested: false,\n      insurance_requested: \"no\",\n      ship_date: \"today\",\n      postage_type: postage,\n    };\n\n    const res = await axiosWithDelimiterFile.post(\n      `/clients/${chitChatClientId}/shipments`,\n      shipmentBody,\n      {\n        headers: {\n          Authorization: chitChatTkn,\n        },\n      }\n    );\n\n    if(res.status == 201) {\n      return {\n        id: res.data.shipment.id,\n        tracking: res.data.shipment.tracking_url,\n        rates: res.data.shipment.rates,\n        name: orderToBeShipped[0].ship_to_name,\n      };\n    } else {\n      return \"Something went wrong\"\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getShipment = async (id) => {\n  try {\n    const res = await axios.get(\n      `/clients/${chitChatClientId}/shipments/${id}`,\n      {\n        headers: {\n          Authorization: chitChatTkn,\n        },\n      }\n    );\n    if (res.status === 200) {\n      return res;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllShipments = async () => {\n  try {\n    const res = await axios.get(`/clients/${chitChatClientId}/shipments`, {\n      headers: {\n        Authorization: chitChatTkn,\n      },\n    });\n    if (res.status === 200) {\n      return res;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const buyShipment = async (shipmentId) => {\n  try {\n    const res = await axiosWithDelimiterFile.patch(\n      `/clients/${chitChatClientId}/shipments/${shipmentId}/buy`,\n      null,\n      {\n        headers: {\n          Authorization: chitChatTkn,\n        },\n      }\n    );\n    if (res.status === 200) {\n      return true;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/bcraig/Desktop/idee/src/apis/axios.js",[],"/Users/bcraig/Desktop/idee/src/components/BandcampButton.js",["98","99"],"import React from \"react\";\nimport { markAsShipped } from \"../apis/bandcamp\";\n\nexport default function BandcampButton({ token, unfilledOrders, shipments }) {\n  const markShipped = async (token, order_id, tracking_url) => {\n    const markShipped = await markAsShipped(token, order_id, tracking_url);\n  };\n\n  if (shipments) {\n    return (\n      <button className=\"bandcampBtn\"\n        onClick={async () => {\n          const result = window.confirm(\n            \"Mark All Shipments With A Status Of Inducted/Recevied/Released As Shipped Via Bandcamp?\"\n          );\n          if (result) {\n            shipments.data.map((shipment) => {\n              if (shipment.status === \"inducted\" || shipment.status === \"received\" || shipment.status === \"released\" || shipment.status === \"delivered\") {\n                markShipped(token, shipment.order_id, shipment.tracking_url);\n              }\n            });\n            document.getElementsByClassName('bandcampBtn')[0].innerHTML = 'Making calls...please wait'\n            setTimeout(() => {\n              document.getElementsByClassName('bandcampBtn')[0].innerHTML = 'You may refresh the page now'\n            }, 30000)\n\n          }\n        }}\n      >\n        Send Confirmation and Mark As Shipped\n      </button>\n    );\n  } else {\n    return false;\n  }\n}\n","/Users/bcraig/Desktop/idee/src/apis/webflow.js",[],"/Users/bcraig/Desktop/idee/src/components/WebflowCard.js",["100","101","102","103","104","105","106"],"import React, { useState, useEffect } from \"react\";\nimport { useStoreActions } from \"easy-peasy\";\nimport { createShipmentWebflow, buyShipment, getShipment } from \"../apis/chitchats\";\nimport Spinner from \"../spinnerTwo.gif\";\nimport PropTypes from \"prop-types\";\n\nconst WebflowCard = ({ confirmCreateShipment, orderToBeShipped, idx, shipments }) => {\n  const [rates, setRates] = useState([]);\n  const [shipId, setShipId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [invalidRate, setInvalidRate] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [noShow, setNoShow] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n\n  const handleClick = () => setChecked(!checked);\n\n  const add = useStoreActions((actions) => actions.pngs.add);\n  const addInfo = useStoreActions((actions) => actions.pngs.addInfo);\n\n\n  const item = orderToBeShipped.purchasedItems.map((item) => {\n    return (\n      <li key={orderToBeShipped.orderId}>\n        <span className={item.count > 1 ? \"highlight\" : \"\"}>\n          {item.count}{\" \"}\n        </span>\n        {item.productName}\n      </li>\n    );\n  });\n\n  const createShipmentFunc = async () => {\n    const shipment = await createShipmentWebflow(orderToBeShipped);\n    if (shipment.id) {\n      setLoading(true);\n      setTimeout(() => {\n        const shipmentBought = buyShipment(shipment.id);\n        shipmentBought.then((res) => {\n          if (res) {\n            setTimeout(() => {\n              const getShipmentInfo = getShipment(shipment.id);\n              getShipmentInfo.then((info) => {\n                setLoading(false);\n                add(info.data.shipment.postage_label_png_url);\n                setComplete(true);\n              });\n            }, 10000);\n          }\n        });\n      }, 9000);\n    }\n  };\n\n\n  useEffect(() => {\n    if (confirmCreateShipment) {\n      setChecked(true);\n    }\n    if (checked) {\n      createShipmentFunc(orderToBeShipped);\n      addInfo(orderToBeShipped);\n    }\n    // REMOVE FOR STAGING HERE\n    if (shipments) {\n      shipments.data.map((test) => {\n        if (parseInt(test.order_id) === orderToBeShipped.orderId) {\n          setNoShow(true);\n        }\n      });\n    }\n  }, [\n    setRates,\n    setShipId,\n    confirmCreateShipment,\n    setName,\n    setInvalidRate,\n    setLoading,\n    setChecked,\n    checked,\n    setComplete,\n    setNoShow,\n    setConfirm,\n  ]);\n\n  if (noShow) {\n    return (\n      <div key={orderToBeShipped.orderId} className={`order complete`}>\n        <p>Name: {orderToBeShipped.shippingAddress.addressee}</p>\n        <p>Country: {orderToBeShipped.shippingAddress.country}</p>\n        <div className=\"flexContainer\">\n          <p>Items</p>\n          <ul>{item}</ul>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <img src={Spinner} alt=\"\" />;\n  } else {\n    return (\n      <div\n        key={orderToBeShipped.orderId}\n        className={`order ${complete ? \"complete\" : \"\"}`}\n      >\n        <p>Name: {orderToBeShipped.shippingAddress.addressee}</p>\n        <p>Country: {orderToBeShipped.shippingAddress.country}</p>\n        <div className=\"flexContainer\">\n          <ul>{item}</ul>\n        </div>\n        <div className=\"individualShip\">\n          {!confirm ? (\n            <button\n              className=\"processOrder\"\n              onClick={() => {\n                const result = window.confirm(\n                  \"Do You Want To individually Process This Order?\"\n                );\n                setConfirm(result);\n              }}\n            >\n              Individually Process This Order?\n            </button>\n          ) : (\n            <>\n              <p className=\"tinyText\">Process Individual Shipment</p>\n              <input\n                className=\"checkbox\"\n                onClick={handleClick}\n                onChange={() => (confirmCreateShipment = true)}\n                checked={checked}\n                type=\"checkbox\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n};\n\nWebflowCard.propTypes = {};\n\nexport default WebflowCard;\n","/Users/bcraig/Desktop/idee/src/components/PdfGeneratorWebflow.js",["107","108","109","110"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\nconst PdfGeneratorWebflow = ({ urls, info }) => {\n  \n  info.map((order, i) => {\n    order.url = urls[i];\n  });\n\n  const PdfIdee = () => {\n    return (\n      <Document>\n        {info.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              {order.purchasedItems.map((item) => {\n                if (item.count > 1) {\n                  return (\n                    <Text\n                      style={styles.highlight}\n                    >{`Quanity: ${item.count}, Item: ${item.productName}`}</Text>\n                  );\n                } else {\n                  return (\n                    <Text\n                      style={styles.text}\n                    >{`Quanity: ${item.count}, Item: ${item.productName}`}</Text>\n                  );\n                }\n              })}\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n      paddingVertical: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n      marginTop: 100,\n    },\n    highlight: {\n      backgroundColor: \"yellow\",\n      color: \"red\",\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    text: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    image: {\n      marginVertical: -100,\n      marginHorizontal: 100,\n      transform: \"rotate(90deg)\",\n    },\n  });\n  const todayDate = new Date().toISOString().slice(0,10);\n\n  return (\n    <PDFDownloadLink document={<PdfIdee />} fileName={`${todayDate}.pdf`}>\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  );\n};\n\nexport default PdfGeneratorWebflow;\n",["111","112"],"/Users/bcraig/Desktop/idee/src/components/WebflowButton.js",["113"],"import React from \"react\";\nimport { markAsShippedWebflow } from \"../apis/webflow\";\n\nexport default function WebflowButton({ unfilledOrders, shipments }) {\n  if (shipments) {\n    return (\n      <button className=\"webflowBtn\"\n        onClick={async () => {\n          const result = window.confirm(\n            \"Mark All Shipments With A Status Of Inducted/Recevied/Released As Shipped Via Bandcamp?\"\n          );\n          if (result) {\n            shipments.data.map((shipment) => {\n              if (shipment.status === \"inducted\" || shipment.status === \"received\" || shipment.status === \"released\" || shipment.status === \"delivered\") {\n                markAsShippedWebflow(shipment.order_id, shipment.tracking_url);\n              }\n            });\n            document.getElementsByClassName('webflowBtn')[0].innerHTML = 'Refresh Window In a Few Seconds'\n          }\n        }}\n      >\n        Send Confirmation and Mark As Shipped\n      </button>\n    );\n  } else {\n    return false;\n  }\n}\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":46,"nodeType":"120","messageId":"121","endLine":3,"endColumn":59},{"ruleId":"118","severity":1,"message":"122","line":9,"column":8,"nodeType":"120","messageId":"121","endLine":9,"endColumn":19},{"ruleId":"118","severity":1,"message":"123","line":12,"column":8,"nodeType":"120","messageId":"121","endLine":12,"endColumn":21},{"ruleId":"118","severity":1,"message":"124","line":20,"column":10,"nodeType":"120","messageId":"121","endLine":20,"endColumn":31},{"ruleId":"118","severity":1,"message":"125","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"126","line":5,"column":3,"nodeType":"120","messageId":"121","endLine":5,"endColumn":7},{"ruleId":"118","severity":1,"message":"127","line":12,"column":8,"nodeType":"120","messageId":"121","endLine":12,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":16,"column":23,"nodeType":"130","messageId":"131","endLine":16,"endColumn":25},{"ruleId":"118","severity":1,"message":"132","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"118","severity":1,"message":"133","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":15},{"ruleId":"118","severity":1,"message":"134","line":9,"column":10,"nodeType":"120","messageId":"121","endLine":9,"endColumn":16},{"ruleId":"118","severity":1,"message":"135","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":14},{"ruleId":"118","severity":1,"message":"136","line":11,"column":10,"nodeType":"120","messageId":"121","endLine":11,"endColumn":21},{"ruleId":"118","severity":1,"message":"137","line":16,"column":10,"nodeType":"120","messageId":"121","endLine":16,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":64,"column":33,"nodeType":"130","messageId":"131","endLine":64,"endColumn":35},{"ruleId":"128","severity":1,"message":"129","line":79,"column":33,"nodeType":"130","messageId":"131","endLine":79,"endColumn":35},{"ruleId":"138","severity":1,"message":"139","line":81,"column":26,"nodeType":"140","messageId":"141","endLine":81,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":88,"column":6,"nodeType":"144","endLine":101,"endColumn":4,"suggestions":"145"},{"ruleId":"142","severity":1,"message":"146","line":13,"column":6,"nodeType":"144","endLine":13,"endColumn":28,"suggestions":"147"},{"ruleId":"118","severity":1,"message":"148","line":14,"column":9,"nodeType":"120","messageId":"121","endLine":14,"endColumn":18},{"ruleId":"128","severity":1,"message":"149","line":31,"column":68,"nodeType":"130","messageId":"150","endLine":31,"endColumn":70},{"ruleId":"118","severity":1,"message":"151","line":92,"column":11,"nodeType":"120","messageId":"121","endLine":92,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":118,"column":50,"nodeType":"130","messageId":"131","endLine":118,"endColumn":52},{"ruleId":"128","severity":1,"message":"149","line":207,"column":54,"nodeType":"130","messageId":"150","endLine":207,"endColumn":56},{"ruleId":"118","severity":1,"message":"151","line":267,"column":11,"nodeType":"120","messageId":"121","endLine":267,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":293,"column":36,"nodeType":"130","messageId":"131","endLine":293,"endColumn":38},{"ruleId":"138","severity":1,"message":"139","line":349,"column":19,"nodeType":"140","messageId":"141","endLine":349,"endColumn":21},{"ruleId":"118","severity":1,"message":"152","line":6,"column":11,"nodeType":"120","messageId":"121","endLine":6,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":17,"column":43,"nodeType":"130","messageId":"131","endLine":17,"endColumn":45},{"ruleId":"118","severity":1,"message":"132","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":17},{"ruleId":"118","severity":1,"message":"133","line":8,"column":10,"nodeType":"120","messageId":"121","endLine":8,"endColumn":15},{"ruleId":"118","severity":1,"message":"134","line":9,"column":10,"nodeType":"120","messageId":"121","endLine":9,"endColumn":16},{"ruleId":"118","severity":1,"message":"135","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":14},{"ruleId":"118","severity":1,"message":"136","line":11,"column":10,"nodeType":"120","messageId":"121","endLine":11,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":68,"column":33,"nodeType":"130","messageId":"131","endLine":68,"endColumn":35},{"ruleId":"142","severity":1,"message":"143","line":74,"column":6,"nodeType":"144","endLine":86,"endColumn":4,"suggestions":"153"},{"ruleId":"118","severity":1,"message":"125","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"126","line":5,"column":3,"nodeType":"120","messageId":"121","endLine":5,"endColumn":7},{"ruleId":"118","severity":1,"message":"127","line":12,"column":8,"nodeType":"120","messageId":"121","endLine":12,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":16,"column":23,"nodeType":"130","messageId":"131","endLine":16,"endColumn":25},{"ruleId":"114","replacedBy":"154"},{"ruleId":"116","replacedBy":"155"},{"ruleId":"128","severity":1,"message":"129","line":13,"column":43,"nodeType":"130","messageId":"131","endLine":13,"endColumn":45},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'WebflowCard' is defined but never used.","'WebflowButton' is defined but never used.","'unfilledWebflowOrders' is assigned a value but never used.","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PropTypes' is defined but never used.","'rates' is assigned a value but never used.","'shipId' is assigned a value but never used.","'name' is assigned a value but never used.","'invalidRate' is assigned a value but never used.","'confirm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'createShipmentFunc', 'orderToBeShipped', and 'shipments'. Either include them or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["159"],"'prevCount' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'amount' is assigned a value but never used.","'markShipped' is assigned a value but never used.",["160"],["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, setPreorder, orderToBeShipped, shipments, createShipmentFunc, addInfo]",{"range":"167","text":"168"},"Update the dependencies array to be: [setCount, setConfirm, count]",{"range":"169","text":"170"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, shipments, createShipmentFunc, orderToBeShipped, addInfo]",{"range":"171","text":"172"},[2756,2959],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, setPreorder, orderToBeShipped, shipments, createShipmentFunc, addInfo]",[445,467],"[setCount, setConfirm, count]",[2307,2494],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, shipments, createShipmentFunc, orderToBeShipped, addInfo]"]