[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"4","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"5","/Users/bcraig/Desktop/idee/src/components/Card.js":"6","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js":"7","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"8","/Users/bcraig/Desktop/idee/src/components/Button.js":"9"},{"size":500,"mtime":1606789933533,"results":"10","hashOfConfig":"11"},{"size":2220,"mtime":1610928167065,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606789933534,"results":"13","hashOfConfig":"11"},{"size":2822,"mtime":1610653527899,"results":"14","hashOfConfig":"11"},{"size":3292,"mtime":1610917874973,"results":"15","hashOfConfig":"11"},{"size":3908,"mtime":1610928633778,"results":"16","hashOfConfig":"11"},{"size":1407,"mtime":1610914584456,"results":"17","hashOfConfig":"11"},{"size":862,"mtime":1610924396127,"results":"18","hashOfConfig":"11"},{"size":746,"mtime":1610928315478,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"s4sshl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bcraig/Desktop/idee/src/index.js",[],["43","44"],"/Users/bcraig/Desktop/idee/src/App.js",["45","46","47","48","49","50","51"],"/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",["52"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS\n\nexport const getCredentials = async () => {\n    const client_id = process.env.REACT_APP_BANDCAMP_CLIENT_ID;\n    const client_secret = process.env.REACT_APP_BANDCAMP_CLIENT_SECRET;\n    const dataType = \"json\";\n    const grant_type = \"client_credentials\";\n    const credentials = await axios.post(\n      `/oauth_token`,\n      null,\n      {\n        params: {\n          client_id,\n          client_secret,\n          dataType,\n          grant_type,\n        },\n      }\n    );\n    return credentials;\n};\n\nexport const getBands = async (token) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    // const bodyParameters = {\n    //   key: \"value\",\n    // };\n    const getBands = await axios.post(\n      \"/api/account/1/my_bands\",\n      null,\n      config\n    );\n    return getBands;\n};\n\nexport const getOrdersUnshipped = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      unshipped_only: true,\n    };\n    const allOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allOrders\n}\n\nexport const getAllRecentOrders = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const oneMonthsAgo = new Date();\n    oneMonthsAgo.setMonth(oneMonthsAgo.getMonth() - 1);\n    const recentDateFrom = `${oneMonthsAgo.getFullYear()}-${oneMonthsAgo.getMonth()}-01`\n    \n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      start_time: recentDateFrom\n    };\n    const allRecentOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allRecentOrders\n}\n\nexport const markAsShipped = async (token, orderToBeShipped, trackingUrl) => {\n  // THIS WORKS DONT USE BECAUSE IT FUCKS SHIT UP, ask alex to make a bunch of fake orders so I can mark as shipped?!?!?!?!\n  // WHEN inducted/released, click buttton that takes all orders that are received and then markAsShipped, inducted on clikc, then send mark as shipped.\n  // \n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const params = {\n    items: [\n      {\n        id: orderToBeShipped.payment_id,\n        id_type: \"p\",\n        shipped: true,\n        tracking_code: trackingUrl,\n        notification: true,\n        notification_message: `Your items will be shipped within 24 hours! Your tracking url is ${trackingUrl}`\n      }\n    ]\n  }\n    \n  return params\n\n  // const shippedOrder = await axios.post(\n  //   \"/api/merchorders/2/update_shipped\",\n  //   params,\n  //   config\n  // );\n  // console.log(shippedOrder, 'ORDER SHIPPED?!?!')\n  // return shippedOrder\n}","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["53"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS AND DO ERROR HANDLING FOR THE APPLICATION\n\nconst chitChatTkn = process.env.REACT_APP_CHITCHATS_API_SECRET_STAGING\nconst chitChatClientId = process.env.REACT_APP_CHITCHATS_API_CLIENT_ID_STAGING\n\nexport const createShipment = async (orderToBeShipped) => {\n    const {ship_to_name, ship_to_street, ship_to_street_2, ship_to_city, ship_to_state, ship_to_country_code, ship_to_zip, buyer_phone,  buyer_email, sub_total, currency, paypal_id} = orderToBeShipped\n    // make this dynamic based on what items and how many 0.6 is base each record 0.6,\n    // new sizing dimension for if your shipping clothing.\n\n    const postageType = () => {\n        if(ship_to_country_code === 'CA') {\n            return \"chit_chats_canada_tracked\"\n        } else if(ship_to_country_code === 'US') {\n            return \"usps_media_mail\"\n        } else {\n            return \"asendia_priority_tracked\"\n        }\n    }\n    // EDGE CHASE INTERNATIONAL ONLY\n    const postage = postageType()\n\n\n    const shipmentBody = {\n        name: ship_to_name,\n        address_1: ship_to_street,\n        address_2: ship_to_street_2,\n        city: ship_to_city,\n        province_code: ship_to_state,\n        postal_code: ship_to_zip,\n        country_code: ship_to_country_code,\n        phone: buyer_phone,\n        package_contents: \"merchandise\",\n        description: \"Phonographic Record\",\n        value: sub_total,\n        value_currency: currency,\n        order_store: \"other\",\n        order_id: paypal_id,\n        package_type: \"parcel\",\n        size_x: 33,\n        size_y: 33,\n        size_z: 4,\n        weight: 1.2,\n        size_unit: \"cm\",\n        weight_unit: \"lb\",\n        signature_requested: false,\n        insurance_requested: 'no',\n        ship_date: \"today\",\n        postage_type: postage\n    }\n    // weight is 0.6 + # recs x 0.6 NEED TO SEE WHAT THIS LOOKS LIKE\n    // change rest based on vinyl or other GO BACK TO MVP AND LOOK AT WHAT IS NEEDED\n\n    const res = await axios.post(`/clients/${chitChatClientId}/shipments`,\n    shipmentBody,\n     {\n        headers: {\n            Authorization: chitChatTkn\n        }\n    })\n\n    return {\n        id: res.data.shipment.id,\n        tracking: res.data.shipment.tracking_url,\n        rates: res.data.shipment.rates\n    }\n}\n\nexport const getShipment = async (id) => {\n    const res = await axios.get(`/clients/${chitChatClientId}/shipments/${id}`, {\n        headers: {\n            Authorization: chitChatTkn\n        }  \n    });\n    if(res.status === 200) {\n        return res\n    }\n}\n\nexport const buyShipment = async (shipmentId, postageType = null) => {\n    if(postageType === null) {\n        const res = await axios.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, null, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    } else {\n        const params = {\n            postage_type: postageType\n        }\n        const res = await axios.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, params, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    }\n}\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["54","55","56"],"/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js",["57"],"import React, { useEffect, useState } from 'react'\nimport { buyShipment } from '../apis/chitchats'\n\nconst ShipmentRates = ({ rates, shipId }) => {\n    let namesOfRates = []\n    rates.map(rate => namesOfRates.push(rate.postage_type))\n    const hasAsendia = namesOfRates.includes('asendia_priority_tracked')\n\n    const [rate, setRate] = useState('')\n\n    useEffect(() => {\n    }, [hasAsendia, rates, rate])\n\n    return (\n        <>\n        {rates.length !== 0 && !hasAsendia ? (\n            //  NEED A USER FROM SLOVENIA SO I CAN TEST THIS WHEN ASENDIA IS NOT AVAILABLE\n            <>\n                <h3>Please select an alternative shipment rate, asendia priority tracked unavailable</h3>\n                <label htmlFor=\"rates\">Choose a shipment rate:</label>\n                <select name=\"rates\" id=\"rates\" onChange={(e) => {\n                    setRate(e.target.value)\n                }}>\n                {rates.length !== 0 && rates.map(rate => {\n                    return <option value={rate.postage_type}>{rate.postage_type}</option>\n                })}\n                </select>\n                <button onClick={async () => {\n                    const shipmentBought = await buyShipment(shipId, rate)\n                    // This could be just a function call\n                }}>Buy shipment with selected rate</button>\n            </>\n        ) : ''}\n        </>\n    )\n}\n\nexport default ShipmentRates","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["58"],"import React, { useEffect } from 'react';\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n// import { useStoreState } from 'easy-peasy'\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#E4E4E4'\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n});\n\n\n\n\n\n\n// Create Document Component\nconst PdfGenerator = () => {\n\n    // // useEffect(() => {\n    //     const todos = useStoreState((state) => state.pngs.items);\n    //     console.log(todos)\n    // // }, [todos])\n\nreturn (\n  <Document>\n    <Page size=\"A4\" style={styles.page}>\n      <View style={styles.section}>\n        <Text>Section #1</Text>\n      </View>\n      <View style={styles.section}>\n        <Text>Section #2</Text>\n      </View>\n    </Page>\n  </Document>\n);\n}\n\nexport default PdfGenerator","/Users/bcraig/Desktop/idee/src/components/Button.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":46,"nodeType":"66","messageId":"67","endLine":2,"endColumn":59},{"ruleId":"64","severity":1,"message":"68","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":25},{"ruleId":"64","severity":1,"message":"69","line":4,"column":27,"nodeType":"66","messageId":"67","endLine":4,"endColumn":35},{"ruleId":"64","severity":1,"message":"70","line":4,"column":37,"nodeType":"66","messageId":"67","endLine":4,"endColumn":41},{"ruleId":"64","severity":1,"message":"71","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":20},{"ruleId":"64","severity":1,"message":"72","line":15,"column":10,"nodeType":"66","messageId":"67","endLine":15,"endColumn":15},{"ruleId":"73","severity":1,"message":"74","line":50,"column":13,"nodeType":"75","messageId":"76","endLine":50,"endColumn":49},{"ruleId":"64","severity":1,"message":"77","line":79,"column":9,"nodeType":"66","messageId":"67","endLine":79,"endColumn":15},{"ruleId":"64","severity":1,"message":"78","line":8,"column":138,"nodeType":"66","messageId":"67","endLine":8,"endColumn":149},{"ruleId":"64","severity":1,"message":"65","line":3,"column":27,"nodeType":"66","messageId":"67","endLine":3,"endColumn":40},{"ruleId":"64","severity":1,"message":"79","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":22,"column":8,"nodeType":"82","endLine":22,"endColumn":42,"suggestions":"83"},{"ruleId":"64","severity":1,"message":"84","line":29,"column":27,"nodeType":"66","messageId":"67","endLine":29,"endColumn":41},{"ruleId":"64","severity":1,"message":"85","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"86","line":11,"column":11,"nodeType":"66","messageId":"67","endLine":11,"endColumn":20},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'PDFDownloadLink' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'PdfGenerator' is defined but never used.","'token' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'config' is assigned a value but never used.","'buyer_email' is assigned a value but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'add', 'addInfo', and 'orderToBeShipped'. Either include them or remove the dependency array.","ArrayExpression",["89"],"'shipmentBought' is assigned a value but never used.","'useEffect' is defined but never used.","'prevCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [setRates, setShipId, setPng, png, addInfo, orderToBeShipped, add]",{"range":"92","text":"93"},[1006,1040],"[setRates, setShipId, setPng, png, addInfo, orderToBeShipped, add]"]