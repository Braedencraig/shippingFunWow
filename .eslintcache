[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"4","/Users/bcraig/Desktop/idee/src/components/Card.js":"5","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"6","/Users/bcraig/Desktop/idee/src/components/Button.js":"7","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js":"8","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"9","/Users/bcraig/Desktop/idee/src/apis/axios.js":"10"},{"size":500,"mtime":1606789933533,"results":"11","hashOfConfig":"12"},{"size":2455,"mtime":1611873698944,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606789933534,"results":"14","hashOfConfig":"12"},{"size":2280,"mtime":1611617657308,"results":"15","hashOfConfig":"12"},{"size":3774,"mtime":1611804632725,"results":"16","hashOfConfig":"12"},{"size":3291,"mtime":1611706601736,"results":"17","hashOfConfig":"12"},{"size":807,"mtime":1611619788198,"results":"18","hashOfConfig":"12"},{"size":2825,"mtime":1611704951658,"results":"19","hashOfConfig":"12"},{"size":4821,"mtime":1611875152311,"results":"20","hashOfConfig":"12"},{"size":789,"mtime":1611706815018,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"s4sshl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/bcraig/Desktop/idee/src/index.js",[],["48","49"],"/Users/bcraig/Desktop/idee/src/App.js",["50"],"/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["51","52","53","54"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\n// Create Document Component\nconst PdfGenerator = ({ todo, todoInfo }) => {\n  todoInfo.map((single, i) => {\n    single.url = todo[i]\n  })\n  \n  const Quixote = () => {\n    return (\n      <Document>\n        {todoInfo.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n    },\n    author: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    subtitle: {\n      fontSize: 18,\n      margin: 12,\n      fontFamily: \"Oswald\",\n    },\n    text: {\n      margin: 12,\n      fontSize: 14,\n      textAlign: \"justify\",\n      fontFamily: \"Times-Roman\",\n    },\n    image: {\n      marginVertical: -20,\n      marginHorizontal: 100,\n      transform: \"rotate(90deg)\",\n    },\n    header: {\n      fontSize: 12,\n      marginBottom: 20,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n    pageNumber: {\n      position: \"absolute\",\n      fontSize: 12,\n      bottom: 30,\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n  });\n\n  return (\n    <PDFDownloadLink document={<Quixote />} fileName=\"somename.pdf\">\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  );\n};\n\nexport default PdfGenerator;\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["55","56","57","58","59","60","61","62","63","64","65"],"import React, { useState, useEffect } from 'react'\nimport ShipmentRates from './ShipmentRates'\nimport { useStoreActions } from 'easy-peasy'\nimport { createShipment, buyShipment, getShipment } from '../apis/chitchats'\nimport Spinner from '../spinner.gif'\nimport PropTypes from 'prop-types'\n\n\nconst Card = ({ confirmCreateShipment, idx, orderToBeShipped, orderToBeShipped: { ship_to_country_code, ship_to_name, ship_to_street, ship_to_street_2, ship_to_city, ship_to_state, ship_to_country, ship_to_zip, buyer_email, buyer_phone } }) => {\n\n    const [rates, setRates] = useState([])\n    const [shipId, setShipId] = useState('')\n    const [name, setName] = useState('')\n    const [invalidRate, setInvalidRate] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    const add = useStoreActions((actions) => actions.pngs.add)\n    const addInfo = useStoreActions((actions) => actions.pngs.addInfo)\n\n    const createShipmentFunc = async (orderToBeShipped) => {\n        let namesOfRates = []\n        const shipment = await createShipment(orderToBeShipped)\n        \n        // console.log(shipment)\n        // shipment.rates.map(rate => namesOfRates.push(rate.postage_type))\n        // const hasAsendia = namesOfRates.includes('asendia_priority_tracked')\n        // setShipId(shipment.id)\n        // // if(!isNorthAmerica && !hasAsendia) {\n            \n        // //     setInvalidRate(true)\n        // //     setRates(shipment.rates)\n        // // } else {\n        //     if(shipment.id) {\n        //         setLoading(true)\n        //         setTimeout(() => {\n        //             const shipmentBought = buyShipment(shipment.id)\n        //             shipmentBought.then(res => {\n        //                 if(res) {\n        //                     setTimeout(() => {\n        //                         const getShipmentInfo = getShipment(shipment.id)\n        //                         getShipmentInfo.then(info => {\n        //                             setLoading(false)\n        //                             add(info.data.shipment.postage_label_png_url)\n        //                         })\n        //                     }, 10000)\n        //                 }\n        //             })\n        //         }, 9000)\n        //     }\n        // }\n    }\n\n    useEffect(() => {\n        setName(orderToBeShipped[0].ship_to_name)\n        if(name && confirmCreateShipment) {\n            createShipmentFunc(orderToBeShipped)\n            addInfo(orderToBeShipped)\n        }\n    }, [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading])\n\n    const isNorthAmerica = ship_to_country_code === 'CA' || ship_to_country_code === 'US'\n\n    if(loading) {\n        return (\n            <img src={Spinner} alt=\"\"/>\n        )\n    } else {\n        return (\n            <div key={idx} className={`order ${confirmCreateShipment && !invalidRate ? 'selected' : 'error'}`}>\n            <p>Name: {orderToBeShipped[0].ship_to_name}</p>\n            <p>Address: {orderToBeShipped[0].ship_to_street}</p>\n            {orderToBeShipped[0].ship_to_street_2 !== null ?  <p>Address2: {orderToBeShipped[0].ship_to_street_2}</p> : '' }\n            <p>Shipping to: {`${orderToBeShipped[0].ship_to_city}, ${orderToBeShipped[0].ship_to_country}`}</p>\n            <p>Phone: {orderToBeShipped[0].buyer_phone}</p>\n            <p>Email: {orderToBeShipped[0].buyer_email}</p>\n            {/* {!isNorthAmerica ? <ShipmentRates idx={idx} shipId={shipId} rates={rates} /> : ''} */}\n            {/* <button className=\"btn\" onClick={async (e) => {\n                // const test = await markAsShipped(token, orderToBeShipped, shipment.tracking)\n            }}>Create & Buy Shipment</button> */}\n            </div>\n        )\n    }\n}\n\nCard.propTypes = {\n\n}\n\nexport default Card\n\n","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",["66"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS\n// handle the 400 bad request here to call again\n\nexport const getCredentials = async () => {\n    const client_id = process.env.REACT_APP_BANDCAMP_CLIENT_ID;\n    const client_secret = process.env.REACT_APP_BANDCAMP_CLIENT_SECRET;\n    const dataType = \"json\";\n    const grant_type = \"client_credentials\";\n    const credentials = await axios.post(\n      `/oauth_token`,\n      null,\n      {\n        params: {\n          client_id,\n          client_secret,\n          dataType,\n          grant_type,\n        },\n      }\n    );\n    if(credentials.status === 200) {\n      return credentials;\n    }\n    if(credentials.status === 400) {\n      const retry = await axios.post(\n        `/oauth_token`,\n        null,\n        {\n          params: {\n            client_id,\n            client_secret,\n            dataType,\n            grant_type,\n          },\n        }\n      );\n      return retry;\n    }\n};\n\nexport const getBands = async (token) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    // const bodyParameters = {\n    //   key: \"value\",\n    // };\n    const getBands = await axios.post(\n      \"/api/account/1/my_bands\",\n      null,\n      config\n    );\n    return getBands;\n};\n\n  // THIS IS FOR ACTUAL LABEL \n      // band_id: bands.data.bands[2].band_id,\nexport const getOrdersUnshipped = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const params = {\n      band_id: bands.data.bands[0].band_id,\n      unshipped_only: true,\n    };\n    const allOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allOrders\n}\n\nexport const getAllRecentOrders = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const oneMonthsAgo = new Date();\n    oneMonthsAgo.setMonth(oneMonthsAgo.getMonth() - 1);\n    const recentDateFrom = `${oneMonthsAgo.getFullYear()}-${oneMonthsAgo.getMonth()}-01`\n    \n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      start_time: recentDateFrom\n    };\n    const allRecentOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allRecentOrders\n}\n\nexport const markAsShipped = async (token, orderToBeShipped, trackingUrl) => {\n  // THIS WORKS DONT USE BECAUSE IT FUCKS SHIT UP, ask alex to make a bunch of fake orders so I can mark as shipped?!?!?!?!\n  // WHEN inducted/released, click buttton that takes all orders that are received and then markAsShipped, inducted on clikc, then send mark as shipped.\n  // \n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const params = {\n    items: [\n      {\n        id: orderToBeShipped.payment_id,\n        id_type: \"p\",\n        shipped: true,\n        tracking_code: trackingUrl,\n        notification: true,\n        notification_message: `Your items will be shipped within 24 hours! Your tracking url is ${trackingUrl}`\n      }\n    ]\n  }\n    \n  return params\n\n  // const shippedOrder = await axios.post(\n  //   \"/api/merchorders/2/update_shipped\",\n  //   params,\n  //   config\n  // );\n  // console.log(shippedOrder, 'ORDER SHIPPED?!?!')\n  // return shippedOrder\n}","/Users/bcraig/Desktop/idee/src/components/Button.js",["67","68"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useStoreState } from 'easy-peasy'\nimport PdfGenerator from '../components/PdfGenerator'\n\n\n\nconst Button = () => {\n    const [count, setCount] = useState(0);\n    const prevCountRef = useRef();\n    useEffect(() => {\n        prevCountRef.current = count;\n    }, [setCount]);\n    const prevCount = prevCountRef.current;\n\n    let todo = useStoreState((state) => state.pngs.urls);\n    let todoInfo = useStoreState((state) => state.pngs.info);\n\n    return (\n        <>\n        <button onClick={() => {\n            setCount(prevState => prevState + 1)\n        }}>\n            Create shipping pdf/packing download\n        </button>\n        {count > 0 && (<PdfGenerator todo={todo} todoInfo={todoInfo} />)}\n        </>\n    )\n}\n\nexport default Button","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js",["69"],"import React, { useEffect, useState } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport { buyShipment, getShipment } from '../apis/chitchats'\nimport Spinner from '../spinner.gif'\n\nconst ShipmentRates = ({ rates, shipId, idx }) => {\n    let namesOfRates = []\n    rates.map(rate => namesOfRates.push(rate.postage_type))\n    const hasAsendia = namesOfRates.includes('asendia_priority_tracked')\n\n    const [rate, setRate] = useState('')\n    const [shipmentBought, setShipmentBought] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n\n    const add = useStoreActions((actions) => actions.pngs.add)\n\n    useEffect(() => {\n    }, [hasAsendia, rates, rate, setShipmentBought, setLoading])\n     if(loading) {\n        return (\n            <img src={Spinner} alt=\"\"/>\n        )\n    } else {\n\n        return (\n            <>\n            {rates.length !== 0 && !hasAsendia && !shipmentBought ? (\n                <div className='selectShipment'>\n                    <h3>Please select an alternative shipment rate, asendia priority tracked unavailable</h3>\n                    <label htmlFor=\"rates\">Choose a shipment rate:</label>\n                    <select name=\"rates\" id=\"rates\" onChange={(e) => {\n                        setRate(e.target.value)\n                    }}>\n                    {rates.length !== 0 && rates.map(rate => {\n                        return <option value={rate.postage_type}>{rate.postage_type}</option>\n                    })}\n                    </select>\n                    <button onClick={() => {\n                        setLoading(true)\n                        const shipmentBought = buyShipment(shipId, rate)\n                        setShipmentBought(true)\n                        shipmentBought.then(res => {\n                            if(res) {\n                                setTimeout(() => {\n                                    const getShipmentInfo = getShipment(shipId)\n                                    getShipmentInfo.then(info => {\n                                        setLoading(false)\n                                        add(info.data.shipment.postage_label_png_url)\n                                    })\n                                }, 10000)\n                            }\n                        })\n                        // const errorBoxes = Array.from(document.getElementsByClassName('error'))\n                        // errorBoxes.map(error => {\n                        //     if(Array.from(error.children).length === 9) {\n                        //         error.style.display = 'none'\n                        //     }\n                        // })\n                    }}>Buy shipment with selected rate</button>\n                </div>\n            ) : ''}\n            </>\n        )\n    }\n\n}\n\nexport default ShipmentRates","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",[],"/Users/bcraig/Desktop/idee/src/apis/axios.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":46,"nodeType":"76","messageId":"77","endLine":2,"endColumn":59},{"ruleId":"74","severity":1,"message":"78","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"79","line":5,"column":3,"nodeType":"76","messageId":"77","endLine":5,"endColumn":7},{"ruleId":"74","severity":1,"message":"80","line":12,"column":8,"nodeType":"76","messageId":"77","endLine":12,"endColumn":12},{"ruleId":"81","severity":1,"message":"82","line":16,"column":28,"nodeType":"83","messageId":"84","endLine":16,"endColumn":30},{"ruleId":"74","severity":1,"message":"85","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":21},{"ruleId":"74","severity":1,"message":"86","line":4,"column":26,"nodeType":"76","messageId":"77","endLine":4,"endColumn":37},{"ruleId":"74","severity":1,"message":"87","line":4,"column":39,"nodeType":"76","messageId":"77","endLine":4,"endColumn":50},{"ruleId":"74","severity":1,"message":"88","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":17},{"ruleId":"74","severity":1,"message":"89","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":17},{"ruleId":"74","severity":1,"message":"90","line":12,"column":12,"nodeType":"76","messageId":"77","endLine":12,"endColumn":18},{"ruleId":"74","severity":1,"message":"91","line":17,"column":11,"nodeType":"76","messageId":"77","endLine":17,"endColumn":14},{"ruleId":"74","severity":1,"message":"92","line":21,"column":13,"nodeType":"76","messageId":"77","endLine":21,"endColumn":25},{"ruleId":"74","severity":1,"message":"93","line":22,"column":15,"nodeType":"76","messageId":"77","endLine":22,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":59,"column":8,"nodeType":"96","endLine":59,"endColumn":89,"suggestions":"97"},{"ruleId":"74","severity":1,"message":"98","line":61,"column":11,"nodeType":"76","messageId":"77","endLine":61,"endColumn":25},{"ruleId":"74","severity":1,"message":"99","line":99,"column":9,"nodeType":"76","messageId":"77","endLine":99,"endColumn":15},{"ruleId":"94","severity":1,"message":"100","line":12,"column":8,"nodeType":"96","endLine":12,"endColumn":18,"suggestions":"101"},{"ruleId":"74","severity":1,"message":"102","line":13,"column":11,"nodeType":"76","messageId":"77","endLine":13,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":2,"column":27,"nodeType":"76","messageId":"77","endLine":2,"endColumn":40},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ShipmentRates' is defined but never used.","'buyShipment' is defined but never used.","'getShipment' is defined but never used.","'PropTypes' is defined but never used.","'rates' is assigned a value but never used.","'shipId' is assigned a value but never used.","'add' is assigned a value but never used.","'namesOfRates' is assigned a value but never used.","'shipment' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'name', and 'orderToBeShipped'. Either include them or remove the dependency array. If 'setName' needs the current value of 'orderToBeShipped', you can also switch to useReducer instead of useState and read 'orderToBeShipped' in the reducer.","ArrayExpression",["105"],"'isNorthAmerica' is assigned a value but never used.","'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["106"],"'prevCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, orderToBeShipped, name, addInfo]",{"range":"111","text":"112"},"Update the dependencies array to be: [count, setCount]",{"range":"113","text":"114"},[2495,2576],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, orderToBeShipped, name, addInfo]",[327,337],"[count, setCount]"]