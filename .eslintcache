[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"4","/Users/bcraig/Desktop/idee/src/components/Card.js":"5","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"6","/Users/bcraig/Desktop/idee/src/components/Button.js":"7","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"8","/Users/bcraig/Desktop/idee/src/apis/axios.js":"9","/Users/bcraig/Desktop/idee/src/components/BandcampButton.js":"10"},{"size":500,"mtime":1606789933533,"results":"11","hashOfConfig":"12"},{"size":3956,"mtime":1612122696022,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1606789933534,"results":"14","hashOfConfig":"12"},{"size":2231,"mtime":1612122743136,"results":"15","hashOfConfig":"12"},{"size":4094,"mtime":1612123930116,"results":"16","hashOfConfig":"12"},{"size":2752,"mtime":1612121047539,"results":"17","hashOfConfig":"12"},{"size":1039,"mtime":1612107714488,"results":"18","hashOfConfig":"12"},{"size":4775,"mtime":1612123495984,"results":"19","hashOfConfig":"12"},{"size":852,"mtime":1612107441090,"results":"20","hashOfConfig":"12"},{"size":973,"mtime":1612123921906,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"s4sshl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bcraig/Desktop/idee/src/index.js",[],["47","48"],"/Users/bcraig/Desktop/idee/src/App.js",["49"],"import React, { useEffect, useState } from \"react\";\nimport { action, createStore, StoreProvider, useStoreState } from \"easy-peasy\";\nimport { getCredentials, getBands, getOrdersUnshipped } from \"./apis/bandcamp\";\nimport { getAllShipments } from \"./apis/chitchats\";\n\nimport Card from \"./components/Card\";\nimport Button from \"./components/Button\";\nimport BandcampButton from \"./components/BandcampButton\";\n\nimport Spinner from \"./spinner.gif\";\nimport \"./App.css\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {\n  const [unfilledOrders, setUnfilledOrders] = useState(null);\n  const [confirmCreateShipment, setConfirmCreateShipment] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [getShip, setGetShip] = useState(null);\n  const [bandcampError, setBandcampError] = useState(false);\n\n  const store = createStore({\n    pngs: {\n      urls: [],\n      info: [],\n      add: action((state, payload) => {\n        state.urls.push(payload);\n      }),\n      addInfo: action((state, payload) => {\n        state.info.push(payload);\n      }),\n    },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const ship = await getAllShipments();\n      setGetShip(ship);\n      const clientCreds = await getCredentials();\n      if (clientCreds === \"error\") {\n        setBandcampError(true);\n      } else {\n        const accessTkn = clientCreds?.data.access_token;\n        setToken(accessTkn);\n        const bands = await getBands(accessTkn);\n        const ordersUnshipped = await getOrdersUnshipped(accessTkn, bands);\n        const result = ordersUnshipped.data.items.reduce(function (r, a) {\n          r[a.payment_id] = r[a.payment_id] || [];\n          r[a.payment_id].push(a);\n          return r;\n        }, Object.create(null));\n        const sortedByPaymentId = Object.values(result);\n        const filteredOutSkip = sortedByPaymentId.filter(order => order[0].ship_notes === null || order[0].ship_notes.indexOf(\"skip\") === -1)\n        console.log(filteredOutSkip)\n        setUnfilledOrders(filteredOutSkip);\n        // setUnfilledOrders(sortedByPaymentId);\n        var todayDate = new Date().toISOString().slice(0,10);\n        console.log(todayDate)\n      }\n    }\n    fetchData();\n  }, [setToken, setUnfilledOrders, setGetShip, setBandcampError]);\n\n  console.log(getShip);\n\n  if (bandcampError) {\n    return <h2>Error with Bandcamp API Secret, Please Refresh</h2>;\n  }\n\n  if (unfilledOrders === null) {\n    return (\n      <div className=\"loadingDisplay\">\n        <h2>Gathering Unshipped Orders</h2>\n        <img src={Spinner} alt=\"\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <StoreProvider store={store}>\n        <div className=\"toBeShipped\">\n          <h2>\n            Orders To Be Shipped:{\" \"}\n            {unfilledOrders === null ? \"\" : unfilledOrders.length}\n          </h2>\n          <div className=\"btn\">\n            <button\n              onClick={() => {\n                const result = window.confirm(\"Select all shipments?\");\n                setConfirmCreateShipment(result);\n              }}\n            >\n              Select All Shipments For Processing\n            </button>\n          </div>\n          <div className=\"orderFlex\">\n            {unfilledOrders &&\n              unfilledOrders.map((orderToBeShipped, idx) => {\n                return (\n                  <Card\n                    key={orderToBeShipped[0].sale_item_id}\n                    orderToBeShipped={orderToBeShipped}\n                    idx={idx}\n                    shipments={getShip}\n                    confirmCreateShipment={confirmCreateShipment}\n                  />\n                );\n              })}\n          </div>\n          <div className=\"serious\">\n            <Button />\n            <BandcampButton\n              unfilledOrders={unfilledOrders}\n              token={token}\n              shipments={getShip}\n            />\n          </div>\n        </div>\n      </StoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["50","51","52","53"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\nconst PdfGenerator = ({ urls, info }) => {\n  info.map((order, i) => {\n    order.url = urls[i];\n  });\n\n  const PdfIdee = () => {\n    return (\n      <Document>\n        {info.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              {order.map((item) => {\n                if (item.quantity > 1) {\n                  return (\n                    <Text\n                      style={styles.highlight}\n                    >{`Quanity: ${item.quantity}, Item: ${item.item_name}`}</Text>\n                  );\n                } else {\n                  return (\n                    <Text\n                      style={styles.text}\n                    >{`Quanity: ${item.quantity}, Item: ${item.item_name}`}</Text>\n                  );\n                }\n              })}\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n    },\n    highlight: {\n      backgroundColor: \"yellow\",\n      color: \"red\",\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    text: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    image: {\n      marginVertical: -20,\n      marginHorizontal: 100,\n      transform: \"rotate(90deg)\",\n    },\n  });\n  const todayDate = new Date().toISOString().slice(0,10);\n\n  return (\n    <PDFDownloadLink document={<PdfIdee />} fileName={`${todayDate}.pdf`}>\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  );\n};\n\nexport default PdfGenerator;\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["54","55","56","57","58","59","60"],"/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",[],"/Users/bcraig/Desktop/idee/src/components/Button.js",["61","62"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport PdfGenerator from \"../components/PdfGenerator\";\n\nconst Button = () => {\n  const [count, setCount] = useState(0);\n  const [confirm, setConfirm] = useState(false);\n  const prevCountRef = useRef();\n  useEffect(() => {\n    prevCountRef.current = count;\n  }, [setCount, setConfirm]);\n  const prevCount = prevCountRef.current;\n\n  let urls = useStoreState((state) => state.pngs.urls);\n  let info = useStoreState((state) => state.pngs.info);\n\n  return (\n    <div className=\"pdfGeneration\">\n      <button\n        onClick={() => {\n          setCount((prevState) => prevState + 1);\n          const result = window.confirm(\n            \"Process PDFSs and Packing Slips For All Selected Shipments?\"\n          );\n          setConfirm(result);\n        }}\n      >\n        Create Shipping Download For All Orders\n      </button>\n      {count > 0 && confirm && <PdfGenerator urls={urls} info={info} />}\n    </div>\n  );\n};\n\nexport default Button;\n","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["63","64","65"],"import axios from \"axios\";\nimport axiosWithDelimiterFile from \"../apis/axios\";\n\nconst chitChatTkn = process.env.REACT_APP_CHITCHATS_API_SECRET;\nconst chitChatClientId = process.env.REACT_APP_CHITCHATS_API_CLIENT_ID;\n\nexport const createShipment = async (orderToBeShipped) => {\n  try {\n    let postageType = () => {\n      if (orderToBeShipped[0].ship_to_country_code === \"SI\") {\n        return \"usps_first_class_package_international_service\";\n      } else if (orderToBeShipped[0].ship_to_country_code === \"CA\") {\n        return \"chit_chats_canada_tracked\";\n      } else if (orderToBeShipped[0].ship_to_country_code === \"US\") {\n        return \"usps_media_mail\";\n      } else {\n        return \"asendia_priority_tracked\";\n      }\n    };\n\n    let postage = postageType();\n\n    let tshirt = false;\n    let vinyl = false;\n    let sizeX;\n    let sizeY;\n    let sizeZ;\n\n    const description = orderToBeShipped.map((order) => {\n      if (order.item_name.indexOf(\"Vinyl\") > -1) {\n        vinyl = true;\n      } else if (order.item_name.indexOf(\"T-Shirt\") > -1) {\n        tshirt = true;\n      }\n\n      if (vinyl && tshirt) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record & T-Shirt\";\n      }\n\n      if (vinyl && !tshirt) {\n        sizeX = 33;\n        sizeY = 33;\n        sizeZ = 4;\n        return \"Phonographic Record\";\n      }\n      if (tshirt && !vinyl) {\n        sizeX = 26;\n        sizeY = 34;\n        sizeZ = 4;\n        return \"T-Shirt\";\n      }\n    });\n\n    let total = 0;\n    const amount = orderToBeShipped.map((order) => (total += order.quantity));\n    const totalAmount = total * 25;\n\n    if (total < 4) {\n      sizeZ = 4;\n    } else if (total >= 4 && total <= 20) {\n      sizeZ = 13;\n    } else if (total > 20) {\n      sizeZ = 27;\n    }\n\n    const weight = () => {\n      let totalWeight = 0;\n      let vinylAmount = 0;\n      let tShirtAmount = 0;\n      orderToBeShipped.map((order) => {\n        if (order.item_name.indexOf(\"Vinyl\") > -1) {\n          vinylAmount += order.quantity;\n        } else if (order.item_name.indexOf(\"T-Shirt\") > -1) {\n          tShirtAmount += order.quantity;\n        }\n      });\n      if (vinylAmount > 0) {\n        totalWeight += 0.6;\n      }\n      totalWeight += vinylAmount * 0.6;\n      totalWeight += tShirtAmount * 0.23;\n      return totalWeight;\n    };\n\n    let shipmentBody = {\n      name: orderToBeShipped[0].ship_to_name,\n      address_1: orderToBeShipped[0].ship_to_street,\n      address_2: orderToBeShipped[0].ship_to_street_2,\n      city: orderToBeShipped[0].ship_to_city,\n      province_code: orderToBeShipped[0].ship_to_state,\n      postal_code: orderToBeShipped[0].ship_to_zip,\n      country_code: orderToBeShipped[0].ship_to_country_code,\n      phone: orderToBeShipped[0].buyer_phone,\n      package_contents: \"merchandise\",\n      description: description.slice(-1)[0],\n      value: totalAmount,\n      value_currency: orderToBeShipped[0].currency,\n      order_store: \"other\",\n      order_id: orderToBeShipped[0].payment_id,\n      package_type: \"parcel\",\n      size_x: sizeX,\n      size_y: sizeY,\n      size_z: sizeZ,\n      weight: weight().toFixed(2),\n      size_unit: \"cm\",\n      weight_unit: \"lb\",\n      signature_requested: false,\n      insurance_requested: \"no\",\n      ship_date: \"today\",\n      postage_type: postage,\n    };\n\n    const res = await axios.post(\n      `/clients/${chitChatClientId}/shipments`,\n      shipmentBody,\n      {\n        headers: {\n          Authorization: chitChatTkn,\n        },\n      }\n    );\n\n    return {\n      id: res.data.shipment.id,\n      tracking: res.data.shipment.tracking_url,\n      rates: res.data.shipment.rates,\n      name: orderToBeShipped[0].ship_to_name,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getShipment = async (id) => {\n  try {\n    const res = await axios.get(\n      `/clients/${chitChatClientId}/shipments/${id}`,\n      {\n        headers: {\n          Authorization: chitChatTkn,\n        },\n      }\n    );\n    if (res.status === 200) {\n      return res;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllShipments = async () => {\n  try {\n    const res = await axios.get(`/clients/${chitChatClientId}/shipments`, {\n      headers: {\n        Authorization: chitChatTkn,\n      },\n    });\n    if (res.status === 200) {\n      return res;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const buyShipment = async (shipmentId) => {\n  try {\n    const res = await axiosWithDelimiterFile.patch(\n      `/clients/${chitChatClientId}/shipments/${shipmentId}/buy`,\n      null,\n      {\n        headers: {\n          Authorization: chitChatTkn,\n        },\n      }\n    );\n    if (res.status === 200) {\n      return true;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/Users/bcraig/Desktop/idee/src/apis/axios.js",[],"/Users/bcraig/Desktop/idee/src/components/BandcampButton.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":46,"nodeType":"74","messageId":"75","endLine":2,"endColumn":59},{"ruleId":"72","severity":1,"message":"76","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"77","line":5,"column":3,"nodeType":"74","messageId":"75","endLine":5,"endColumn":7},{"ruleId":"72","severity":1,"message":"78","line":12,"column":8,"nodeType":"74","messageId":"75","endLine":12,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":15,"column":23,"nodeType":"81","messageId":"82","endLine":15,"endColumn":25},{"ruleId":"72","severity":1,"message":"83","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":17},{"ruleId":"72","severity":1,"message":"84","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":15},{"ruleId":"72","severity":1,"message":"85","line":9,"column":10,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"72","severity":1,"message":"86","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":14},{"ruleId":"72","severity":1,"message":"87","line":11,"column":10,"nodeType":"74","messageId":"75","endLine":11,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":66,"column":33,"nodeType":"81","messageId":"82","endLine":66,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":72,"column":6,"nodeType":"90","endLine":84,"endColumn":4,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":11,"column":6,"nodeType":"90","endLine":11,"endColumn":28,"suggestions":"93"},{"ruleId":"72","severity":1,"message":"94","line":12,"column":9,"nodeType":"74","messageId":"75","endLine":12,"endColumn":18},{"ruleId":"79","severity":1,"message":"95","line":29,"column":54,"nodeType":"81","messageId":"96","endLine":29,"endColumn":56},{"ruleId":"72","severity":1,"message":"97","line":58,"column":11,"nodeType":"74","messageId":"75","endLine":58,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":73,"column":36,"nodeType":"81","messageId":"82","endLine":73,"endColumn":38},{"ruleId":"72","severity":1,"message":"98","line":6,"column":11,"nodeType":"74","messageId":"75","endLine":6,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":17,"column":43,"nodeType":"81","messageId":"82","endLine":17,"endColumn":45},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PropTypes' is defined but never used.","'rates' is assigned a value but never used.","'shipId' is assigned a value but never used.","'name' is assigned a value but never used.","'invalidRate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'createShipmentFunc', 'orderToBeShipped', and 'shipments'. Either include them or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["102"],"'prevCount' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'amount' is assigned a value but never used.","'markShipped' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, shipments, createShipmentFunc, orderToBeShipped, addInfo]",{"range":"107","text":"108"},"Update the dependencies array to be: [setCount, setConfirm, count]",{"range":"109","text":"110"},[2258,2445],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, shipments, createShipmentFunc, orderToBeShipped, addInfo]",[365,387],"[setCount, setConfirm, count]"]