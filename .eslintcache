[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"4","/Users/bcraig/Desktop/idee/src/components/Card.js":"5","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"6","/Users/bcraig/Desktop/idee/src/components/Button.js":"7","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js":"8","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"9","/Users/bcraig/Desktop/idee/src/apis/axios.js":"10","/Users/bcraig/Desktop/idee/src/components/BandcampButton.js":"11"},{"size":500,"mtime":1606789933533,"results":"12","hashOfConfig":"13"},{"size":3693,"mtime":1612061524930,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1606789933534,"results":"15","hashOfConfig":"13"},{"size":2503,"mtime":1612048275148,"results":"16","hashOfConfig":"13"},{"size":3823,"mtime":1612061980033,"results":"17","hashOfConfig":"13"},{"size":2895,"mtime":1612058879826,"results":"18","hashOfConfig":"13"},{"size":878,"mtime":1612048244303,"results":"19","hashOfConfig":"13"},{"size":2825,"mtime":1611704951658,"results":"20","hashOfConfig":"13"},{"size":5832,"mtime":1612057013160,"results":"21","hashOfConfig":"13"},{"size":789,"mtime":1611706815018,"results":"22","hashOfConfig":"13"},{"size":1189,"mtime":1612058863600,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"s4sshl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bcraig/Desktop/idee/src/index.js",[],["51","52"],"/Users/bcraig/Desktop/idee/src/App.js",["53"],"/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["54","55","56","57"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\nconst PdfGenerator = ({ todo, todoInfo }) => {\n  todoInfo.map((single, i) => {\n    single.url = todo[i]\n  })\n\n  \n  const Quixote = () => {\n    return (\n      <Document>\n        {todoInfo.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              {order.map(item => {\n                if(item.quantity > 1) {\n                  return  <Text style={styles.highlight}>{`Quanity: ${item.quantity}, Item: ${item.item_name}`}</Text>\n                } else {\n                  return  <Text style={styles.author}>{`Quanity: ${item.quantity}, Item: ${item.item_name}`}</Text>\n                }\n              })}\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n    },\n    highlight: {\n      backgroundColor: \"yellow\",\n      color: \"red\",\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    author: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    subtitle: {\n      fontSize: 18,\n      margin: 12,\n      fontFamily: \"Oswald\",\n    },\n    text: {\n      margin: 12,\n      fontSize: 14,\n      textAlign: \"justify\",\n      fontFamily: \"Times-Roman\",\n    },\n    image: {\n      marginVertical: -20,\n      marginHorizontal: 100,\n      transform: \"rotate(90deg)\",\n    },\n    header: {\n      fontSize: 12,\n      marginBottom: 20,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n    pageNumber: {\n      position: \"absolute\",\n      fontSize: 12,\n      bottom: 30,\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n  });\n\n  return (\n    <PDFDownloadLink document={<Quixote />} fileName=\"somename.pdf\">\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  );\n};\n\nexport default PdfGenerator;\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["58","59","60","61","62","63","64","65"],"/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",[],"/Users/bcraig/Desktop/idee/src/components/Button.js",["66","67"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useStoreState } from 'easy-peasy'\nimport PdfGenerator from '../components/PdfGenerator'\n\n\n\nconst Button = () => {\n    const [count, setCount] = useState(0);\n    const prevCountRef = useRef();\n    useEffect(() => {\n        prevCountRef.current = count;\n    }, [setCount]);\n    const prevCount = prevCountRef.current;\n\n    let todo = useStoreState((state) => state.pngs.urls);\n    let todoInfo = useStoreState((state) => state.pngs.info);\n\n    return (\n        <>\n        <p>Do not click unless your dumbass is sure</p>\n        <button onClick={() => {\n            setCount(prevState => prevState + 1)\n        }}>\n            Create shipping pdf/packing download for all orders\n        </button>\n        {count > 0 && (<PdfGenerator todo={todo} todoInfo={todoInfo} />)}\n        </>\n    )\n}\n\nexport default Button","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js",["68"],"import React, { useEffect, useState } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport { buyShipment, getShipment } from '../apis/chitchats'\nimport Spinner from '../spinner.gif'\n\nconst ShipmentRates = ({ rates, shipId, idx }) => {\n    let namesOfRates = []\n    rates.map(rate => namesOfRates.push(rate.postage_type))\n    const hasAsendia = namesOfRates.includes('asendia_priority_tracked')\n\n    const [rate, setRate] = useState('')\n    const [shipmentBought, setShipmentBought] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n\n    const add = useStoreActions((actions) => actions.pngs.add)\n\n    useEffect(() => {\n    }, [hasAsendia, rates, rate, setShipmentBought, setLoading])\n     if(loading) {\n        return (\n            <img src={Spinner} alt=\"\"/>\n        )\n    } else {\n\n        return (\n            <>\n            {rates.length !== 0 && !hasAsendia && !shipmentBought ? (\n                <div className='selectShipment'>\n                    <h3>Please select an alternative shipment rate, asendia priority tracked unavailable</h3>\n                    <label htmlFor=\"rates\">Choose a shipment rate:</label>\n                    <select name=\"rates\" id=\"rates\" onChange={(e) => {\n                        setRate(e.target.value)\n                    }}>\n                    {rates.length !== 0 && rates.map(rate => {\n                        return <option value={rate.postage_type}>{rate.postage_type}</option>\n                    })}\n                    </select>\n                    <button onClick={() => {\n                        setLoading(true)\n                        const shipmentBought = buyShipment(shipId, rate)\n                        setShipmentBought(true)\n                        shipmentBought.then(res => {\n                            if(res) {\n                                setTimeout(() => {\n                                    const getShipmentInfo = getShipment(shipId)\n                                    getShipmentInfo.then(info => {\n                                        setLoading(false)\n                                        add(info.data.shipment.postage_label_png_url)\n                                    })\n                                }, 10000)\n                            }\n                        })\n                        // const errorBoxes = Array.from(document.getElementsByClassName('error'))\n                        // errorBoxes.map(error => {\n                        //     if(Array.from(error.children).length === 9) {\n                        //         error.style.display = 'none'\n                        //     }\n                        // })\n                    }}>Buy shipment with selected rate</button>\n                </div>\n            ) : ''}\n            </>\n        )\n    }\n\n}\n\nexport default ShipmentRates","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["69","70","71"],"import axios from \"axios\";\nimport axiosWithDelimiterFile from '../apis/axios'\n\nconst chitChatTkn = process.env.REACT_APP_CHITCHATS_API_SECRET_STAGING\nconst chitChatClientId = process.env.REACT_APP_CHITCHATS_API_CLIENT_ID_STAGING\n\nexport const createShipment = async (orderToBeShipped) => {\n    try {\n        let postageType = () => {\n            if(orderToBeShipped[0].ship_to_country_code === 'SI') {\n                return \"usps_first_class_package_international_service\"\n            } else if(orderToBeShipped[0].ship_to_country_code === 'CA') {\n                return \"chit_chats_canada_tracked\"\n            } else if(orderToBeShipped[0].ship_to_country_code === 'US') {\n                return \"usps_media_mail\"\n            } else {    \n                return \"asendia_priority_tracked\"\n            }\n        }\n\n        let postage = postageType()\n\n        let tshirt = false;\n        let vinyl = false;\n        let sizeX;\n        let sizeY;\n        let sizeZ;\n\n        const description = orderToBeShipped.map(order => {\n            if(order.item_name.indexOf(\"Vinyl\") > -1) {\n                vinyl = true\n            } else if(order.item_name.indexOf(\"T-Shirt\") > -1) {\n                tshirt = true\n            }\n\n            if(vinyl && tshirt) {\n                sizeX = 33\n                sizeY = 33\n                sizeZ = 4\n                return 'Phonographic Record & T-Shirt'\n            }\n\n            if(vinyl && !tshirt) {\n                sizeX = 33\n                sizeY = 33\n                sizeZ = 4\n                return 'Phonographic Record'\n            }\n            if(tshirt && !vinyl) {\n                sizeX = 26\n                sizeY = 34\n                sizeZ = 4\n                return 'T-Shirt'\n            }\n        })\n\n        let total = 0;\n        const amount = orderToBeShipped.map(order => total += order.quantity)\n        const totalAmount = total * 25;\n\n        if(total < 4) {\n            sizeZ = 4\n        } else if(total >= 4 && total <= 20) {\n            sizeZ = 13\n        } else if(total > 20) {\n            sizeZ = 27\n        }\n\n        const weight = () => {\n            let totalWeight = 0\n            let vinylAmount = 0\n            let tShirtAmount = 0\n            orderToBeShipped.map(order => {\n                if(order.item_name.indexOf(\"Vinyl\") > -1) {\n                    vinylAmount += order.quantity\n                } else if(order.item_name.indexOf(\"T-Shirt\") > -1) {\n                    tShirtAmount += order.quantity\n                }\n            })\n            if(vinylAmount > 0) {\n                totalWeight += 0.6\n            }\n            totalWeight += vinylAmount * 0.6\n            totalWeight += tShirtAmount * 0.23\n            return totalWeight\n        }\n    \n        let shipmentBody = {\n            name: orderToBeShipped[0].ship_to_name,\n            address_1: orderToBeShipped[0].ship_to_street,\n            address_2: orderToBeShipped[0].ship_to_street_2,\n            city: orderToBeShipped[0].ship_to_city,\n            province_code: orderToBeShipped[0].ship_to_state,\n            postal_code: orderToBeShipped[0].ship_to_zip,\n            country_code: orderToBeShipped[0].ship_to_country_code,\n            phone: orderToBeShipped[0].buyer_phone,\n            package_contents: \"merchandise\",\n            description: description.slice(-1)[0],\n            value: totalAmount,\n            value_currency: orderToBeShipped[0].currency,\n            order_store: \"other\",\n            order_id: orderToBeShipped[0].payment_id,\n            package_type: \"parcel\",\n            size_x:sizeX,\n            size_y: sizeY,\n            size_z: sizeZ,\n            weight: weight().toFixed(2),\n            size_unit: \"cm\",\n            weight_unit: \"lb\",\n            signature_requested: false,\n            insurance_requested: 'no',\n            ship_date: \"today\",\n            postage_type: postage\n        }\n            \n        const res = await axios.post(`/clients/${chitChatClientId}/shipments`,\n        shipmentBody,\n         {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n\n    \n        return {\n            id: res.data.shipment.id,\n            tracking: res.data.shipment.tracking_url,\n            rates: res.data.shipment.rates,\n            name: orderToBeShipped[0].ship_to_name\n        }        \n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getShipment = async (id) => {\n    const res = await axios.get(`/clients/${chitChatClientId}/shipments/${id}`, {\n        headers: {\n            Authorization: chitChatTkn\n        }  \n    });\n    if(res.status === 200) {\n        return res\n    } else {\n        console.log('HERERERE')\n        return false\n    }\n}\n\nexport const getAllShipments = async () => {\n    const res = await axios.get(`/clients/${chitChatClientId}/shipments`,\n     {\n        headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n            Authorization: chitChatTkn\n        }  \n    })\n    if(res.status === 200) {\n        return res\n    } else {\n        console.log('HERERERE')\n        return false\n    }\n}\n\nexport const buyShipment = async (shipmentId, postageType = null) => {\n    if(postageType === null) {\n        const res = await axiosWithDelimiterFile.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, null, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    } else {\n        const params = {\n            postage_type: postageType\n        }\n        const res = await axios.patch(`/clients/${chitChatClientId}/shipments/${shipmentId}/buy`, params, {\n            headers: {\n                Authorization: chitChatTkn\n            }\n        })\n        if(res.status === 200) {\n            return true\n        }\n    }\n}\n","/Users/bcraig/Desktop/idee/src/apis/axios.js",[],"/Users/bcraig/Desktop/idee/src/components/BandcampButton.js",["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":46,"nodeType":"80","messageId":"81","endLine":2,"endColumn":59},{"ruleId":"78","severity":1,"message":"82","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"83","line":5,"column":3,"nodeType":"80","messageId":"81","endLine":5,"endColumn":7},{"ruleId":"78","severity":1,"message":"84","line":12,"column":8,"nodeType":"80","messageId":"81","endLine":12,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":15,"column":28,"nodeType":"87","messageId":"88","endLine":15,"endColumn":30},{"ruleId":"78","severity":1,"message":"89","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":21},{"ruleId":"78","severity":1,"message":"90","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":17},{"ruleId":"78","severity":1,"message":"91","line":9,"column":12,"nodeType":"80","messageId":"81","endLine":9,"endColumn":17},{"ruleId":"78","severity":1,"message":"92","line":10,"column":12,"nodeType":"80","messageId":"81","endLine":10,"endColumn":18},{"ruleId":"78","severity":1,"message":"93","line":11,"column":12,"nodeType":"80","messageId":"81","endLine":11,"endColumn":16},{"ruleId":"78","severity":1,"message":"94","line":12,"column":12,"nodeType":"80","messageId":"81","endLine":12,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":58,"column":33,"nodeType":"87","messageId":"88","endLine":58,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":64,"column":8,"nodeType":"97","endLine":64,"endColumn":134,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":12,"column":8,"nodeType":"97","endLine":12,"endColumn":18,"suggestions":"100"},{"ruleId":"78","severity":1,"message":"101","line":13,"column":11,"nodeType":"80","messageId":"81","endLine":13,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":2,"column":27,"nodeType":"80","messageId":"81","endLine":2,"endColumn":40},{"ruleId":"85","severity":1,"message":"102","line":29,"column":56,"nodeType":"87","messageId":"103","endLine":29,"endColumn":58},{"ruleId":"78","severity":1,"message":"104","line":58,"column":15,"nodeType":"80","messageId":"81","endLine":58,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":73,"column":40,"nodeType":"87","messageId":"88","endLine":73,"endColumn":42},{"ruleId":"78","severity":1,"message":"105","line":18,"column":15,"nodeType":"80","messageId":"81","endLine":18,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":24,"column":39,"nodeType":"87","messageId":"88","endLine":24,"endColumn":41},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ShipmentRates' is defined but never used.","'PropTypes' is defined but never used.","'rates' is assigned a value but never used.","'shipId' is assigned a value but never used.","'name' is assigned a value but never used.","'invalidRate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'createShipmentFunc', 'orderToBeShipped', and 'shipments.data'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["109"],"'prevCount' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'amount' is assigned a value but never used.","'markShipped' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, shipments.data, createShipmentFunc, orderToBeShipped, addInfo]",{"range":"114","text":"115"},"Update the dependencies array to be: [count, setCount]",{"range":"116","text":"117"},[2392,2518],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, shipments.data, createShipmentFunc, orderToBeShipped, addInfo]",[327,337],"[count, setCount]"]