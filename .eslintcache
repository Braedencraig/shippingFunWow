[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"4","/Users/bcraig/Desktop/idee/src/components/Card.js":"5","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"6","/Users/bcraig/Desktop/idee/src/components/Button.js":"7","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"8","/Users/bcraig/Desktop/idee/src/apis/axios.js":"9","/Users/bcraig/Desktop/idee/src/components/BandcampButton.js":"10","/Users/bcraig/Desktop/idee/src/apis/webflow.js":"11","/Users/bcraig/Desktop/idee/src/components/WebflowCard.js":"12","/Users/bcraig/Desktop/idee/src/components/PdfGeneratorWebflow.js":"13","/Users/bcraig/Desktop/idee/src/components/WebflowButton.js":"14"},{"size":500,"mtime":1616959796638,"results":"15","hashOfConfig":"16"},{"size":6379,"mtime":1617986341355,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1606789933534,"results":"18","hashOfConfig":"16"},{"size":2484,"mtime":1616954472096,"results":"19","hashOfConfig":"16"},{"size":6683,"mtime":1618491733707,"results":"20","hashOfConfig":"16"},{"size":2625,"mtime":1616954548529,"results":"21","hashOfConfig":"16"},{"size":1227,"mtime":1616955647439,"results":"22","hashOfConfig":"16"},{"size":11172,"mtime":1618491669667,"results":"23","hashOfConfig":"16"},{"size":852,"mtime":1612107441090,"results":"24","hashOfConfig":"16"},{"size":1296,"mtime":1616959801292,"results":"25","hashOfConfig":"16"},{"size":1165,"mtime":1617219115990,"results":"26","hashOfConfig":"16"},{"size":6229,"mtime":1616959234813,"results":"27","hashOfConfig":"16"},{"size":2392,"mtime":1616959803995,"results":"28","hashOfConfig":"16"},{"size":991,"mtime":1614547426953,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"s4sshl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/Users/bcraig/Desktop/idee/src/index.js",[],["66","67"],"/Users/bcraig/Desktop/idee/src/App.js",["68","69"],"import React, { useEffect, useState } from \"react\";\n// import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { action, createStore, StoreProvider, useStoreState } from \"easy-peasy\";\nimport { getCredentials, getBands, getOrdersUnshipped } from \"./apis/bandcamp\";\nimport { getAllShipments } from \"./apis/chitchats\";\nimport { getOrdersUnshippedWebflow } from './apis/webflow'\n\nimport Card from \"./components/Card\";\nimport WebflowCard from \"./components/WebflowCard\";\nimport Button from \"./components/Button\";\nimport BandcampButton from \"./components/BandcampButton\";\nimport WebflowButton from \"./components/WebflowButton\";\nimport Spinner from \"./logoidee.svg\";\nimport \"./App.css\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {  \n  const [unfilledOrders, setUnfilledOrders] = useState(null);\n  const [unfilledWebflowOrders, setUnfilledWebflowOrders] = useState(null);\n  const [confirmCreateShipment, setConfirmCreateShipment] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [getShip, setGetShip] = useState(null);\n  const [bandcampError, setBandcampError] = useState(false);\n\n  const store = createStore({\n    pngs: {\n      urls: [],\n      info: [],\n      add: action((state, payload) => {\n        state.urls.push(payload);\n      }),\n      addInfo: action((state, payload) => {\n        state.info.push(payload);\n      }),\n    },\n    webflowPngs: {\n      urls: [],\n      info: [],\n      add: action((state, payload) => {\n        state.urls.push(payload);\n      }),\n      addInfo: action((state, payload) => {\n        state.info.push(payload);\n      }),\n    },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const webflowOrders = await getOrdersUnshippedWebflow()\n      setUnfilledWebflowOrders(webflowOrders)\n\n      const ship = await getAllShipments();\n      setGetShip(ship);\n      const clientCreds = await getCredentials();\n      if (clientCreds === \"error\") {\n        setBandcampError(true);\n      } else {\n        const accessTkn = clientCreds?.data.access_token;\n        setToken(accessTkn);\n        const bands = await getBands(accessTkn);\n        const ordersUnshipped = await getOrdersUnshipped(accessTkn, bands);\n        const result = ordersUnshipped.data.items.reduce(function (r, a) {\n          r[a.payment_id] = r[a.payment_id] || [];\n          r[a.payment_id].push(a);\n          return r;\n        }, Object.create(null));\n        const sortedByPaymentId = Object.values(result);\n        const filteredOutSkip = sortedByPaymentId.filter(order => order[0].ship_notes === null || order[0].ship_notes.indexOf(\"skip\") === -1)\n        setUnfilledOrders(filteredOutSkip);\n      }\n    }\n    fetchData();\n  \n\n  }, [setToken, setUnfilledOrders, setGetShip, setBandcampError]);\n\n  if (bandcampError) {\n    window.location.reload();\n    return <h2>Error with Bandcamp API Secret, Please Refresh</h2>;\n  }\n\n  if (unfilledOrders === null) {\n    return (\n      <div className=\"loadingDisplay\">\n        <h2>Gathering Unshipped Orders</h2>\n        <img src={Spinner} alt=\"\" />\n      </div>\n    );\n  }\n\n\n  return (\n    <div className=\"App\">\n      {/* <BrowserRouter>\n      <Switch> */}\n      <StoreProvider store={store}>\n        <div className=\"toBeShipped\">\n          {/* <nav>\n            <ul>\n               <li><a href=\"/bandcamp\">Bandcamp Orders</a></li>\n              <li><a href=\"/webflow\">Webflow Orders</a></li>\n          </ul>\n        </nav> */}\n          \n        \n          {/* <Route path=\"/bandcamp\"> */}\n            <h2>\n              Bandcamp Orders To Be Shipped:{\" \"}\n              {unfilledOrders === null ? \"\" : unfilledOrders.length}\n            </h2>\n            {/* <div className=\"btn\">\n              <button\n                onClick={() => {\n                  const result = window.confirm(\"Select all shipments?\");\n                  setConfirmCreateShipment(result);\n                }}\n              >\n                Select All Shipments For Processing\n              </button>\n            </div> */}\n            <div className=\"orderFlex\">\n              {unfilledOrders &&\n                unfilledOrders.map((orderToBeShipped, idx) => {\n                  return (\n                    <Card\n                      key={orderToBeShipped[0].sale_item_id}\n                      orderToBeShipped={orderToBeShipped}\n                      idx={idx}\n                      shipments={getShip}\n                      confirmCreateShipment={confirmCreateShipment}\n                    />\n                  );\n                })}\n            </div>\n            <div className=\"serious\">\n              <Button />\n              <BandcampButton\n                unfilledOrders={unfilledOrders}\n                token={token}\n                shipments={getShip}\n              />\n            </div>\n          {/* </Route> */}\n\n          <div className=\"divider\"></div>\n\n          {/* <Route path=\"/webflow\"> */}\n            <div className=\"orderFlex\">\n              <h2>\n              Webflow Orders To Be Shipped:{\" \"}\n              {unfilledWebflowOrders === null || unfilledWebflowOrders === undefined  ? \"\" : unfilledWebflowOrders.length}\n              </h2>\n              <div className=\"btn\">\n                {/* <button\n                  onClick={() => {\n                    const result = window.confirm(\"Select all shipments?\");\n                    setConfirmCreateShipment(result);\n                  }}\n                >\n                  Select All Shipments For Processing\n                </button> */}\n              </div>\n              {unfilledWebflowOrders &&\n                unfilledWebflowOrders.map((orderToBeShipped, idx) => {\n                  return (\n                    <WebflowCard\n                      key={orderToBeShipped.orderId}\n                      orderToBeShipped={orderToBeShipped}\n                      idx={idx}\n                      shipments={getShip}\n                      confirmCreateShipment={confirmCreateShipment}\n                    />\n                  );\n                })}\n            </div>\n            <div className=\"serious\">\n              <Button webflow />\n              <WebflowButton\n                unfilledOrders={unfilledWebflowOrders}\n                shipments={getShip}\n              />\n            </div>\n          {/* </Route> */}\n\n        </div>\n      </StoreProvider>\n      {/* </Switch>\n      </BrowserRouter> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["70","71","72","73"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\nconst PdfGenerator = ({ urls, info }) => {\n  \n  info.map((order, i) => {\n    order.url = urls[i];\n  });\n\n  const PdfIdee = () => {\n    return (\n      <Document>\n        {info.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              {order.map((item) => {\n                if (item.quantity > 1) {\n                  return (\n                    <Text\n                      style={styles.highlight}\n                    >{`Quanity: ${item.quantity}, Item: ${item.option !== null ? item.option : ''} - ${item.item_name}`}</Text>\n                  );\n                } else {\n                  return (\n                    <Text\n                      style={styles.text}\n                    >{`Quanity: ${item.quantity}, Item:  ${item.option !== null ? item.option : ''} - ${item.item_name}`}</Text>\n                  );\n                }\n              })}\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n      paddingVertical: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n      marginTop: 100,\n    },\n    highlight: {\n      backgroundColor: \"yellow\",\n      color: \"red\",\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    text: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n      width: '80%',\n      marginHorizontal: 'auto'\n    },\n    image: {\n      marginVertical: -5,\n      marginHorizontal: 150,\n      transform: \"rotate(90deg)\",\n      height: 500,\n      width: 300\n    },\n  });\n  const todayDate = new Date().toISOString().slice(0,10);\n\n  return (\n    <>\n      <PDFDownloadLink document={<PdfIdee />} fileName={`${todayDate}.pdf`}>\n        {({ blob, url, loading, error }) =>\n          loading ? \"Loading document...\" : \"Download now!\"\n        }\n      </PDFDownloadLink>\n    </>\n  );\n};\n\nexport default PdfGenerator;\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["74","75","76","77","78","79","80","81","82","83","84","85"],"/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",[],"/Users/bcraig/Desktop/idee/src/components/Button.js",["86","87"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useStoreState } from \"easy-peasy\";\nimport PdfGenerator from \"../components/PdfGenerator\";\nimport PdfGeneratorWebflow from \"../components/PdfGeneratorWebflow\";\n\n\nconst Button = ({ webflow, single }) => {\n  const [count, setCount] = useState(0);\n  const [confirm, setConfirm] = useState(true);\n  const prevCountRef = useRef();\n  useEffect(() => {\n    prevCountRef.current = count;\n  }, [setCount, setConfirm]);\n  const prevCount = prevCountRef.current;\n\n  let urls = useStoreState((state) => state.pngs.urls);\n  let info = useStoreState((state) => state.pngs.info);\n\n  let webflowurls = useStoreState((state) => state.webflowPngs.urls);\n  let webflowinfo = useStoreState((state) => state.webflowPngs.info);\n\n  return (\n    <div className=\"pdfGeneration\">\n      <button\n        onClick={() => {\n          setCount((prevState) => prevState + 1)\n        }}\n      >\n        Create Shipping Download For All Orders\n      </button>\n      {webflow && count > 0 && confirm && <PdfGeneratorWebflow urls={webflowurls} info={webflowinfo} /> }\n      {!webflow && count > 0 && confirm && <PdfGenerator urls={urls} info={info} />}\n    </div>\n  );\n};\n\nexport default Button;\n","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["88","89","90","91","92","93","94"],"/Users/bcraig/Desktop/idee/src/apis/axios.js",[],"/Users/bcraig/Desktop/idee/src/components/BandcampButton.js",["95","96"],"import React from \"react\";\nimport { markAsShipped } from \"../apis/bandcamp\";\n\nexport default function BandcampButton({ token, unfilledOrders, shipments }) {\n  const markShipped = async (token, order_id, tracking_url) => {\n    const markShipped = await markAsShipped(token, order_id, tracking_url);\n  };\n\n  if (shipments) {\n    return (\n      <button className=\"bandcampBtn\"\n        onClick={async () => {\n          const result = window.confirm(\n            \"Mark All Shipments With A Status Of Inducted/Recevied/Released As Shipped Via Bandcamp?\"\n          );\n          if (result) {\n            shipments.data.map((shipment) => {\n              if (shipment.status === \"inducted\" || shipment.status === \"received\" || shipment.status === \"released\" || shipment.status === \"delivered\") {\n                markShipped(token, shipment.order_id, shipment.tracking_url);\n              }\n            });\n            document.getElementsByClassName('bandcampBtn')[0].innerHTML = 'Making calls...please wait'\n            setTimeout(() => {\n              document.getElementsByClassName('bandcampBtn')[0].innerHTML = 'You may refresh the page now'\n            }, 30000)\n\n          }\n        }}\n      >\n        Send Confirmation and Mark As Shipped\n      </button>\n    );\n  } else {\n    return false;\n  }\n}\n","/Users/bcraig/Desktop/idee/src/apis/webflow.js",[],"/Users/bcraig/Desktop/idee/src/components/WebflowCard.js",["97","98","99","100","101","102","103","104","105","106","107"],"import React, { useState, useEffect } from \"react\";\nimport { useStoreActions } from \"easy-peasy\";\nimport { createShipmentWebflow, buyShipment, getShipment } from \"../apis/chitchats\";\nimport Spinner from \"../logoidee.svg\";\nimport PropTypes from \"prop-types\";\n\nconst WebflowCard = ({ confirmCreateShipment, orderToBeShipped, idx, shipments }) => {\n  const [rates, setRates] = useState([]);\n  const [shipId, setShipId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [invalidRate, setInvalidRate] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [noShow, setNoShow] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n  const [preorder, setPreorder] = useState(false);\n  const [cannotProcess, setCannotProcess] = useState(false);\n  const [added, setAdded] = useState(false)\n\n  const handleClick = () => setChecked(!checked);\n\n  const add = useStoreActions((actions) => actions.webflowPngs.add);\n  const addInfo = useStoreActions((actions) => actions.webflowPngs.addInfo);\n\n\n  const item = orderToBeShipped.purchasedItems.map((item) => {\n    return (\n      <li key={orderToBeShipped.orderId}>\n        <span className={item.count > 1 ? \"highlight\" : \"\"}>\n          {item.count}{\" \"}\n        </span>\n        {item.productName}\n      </li>\n    );\n  });\n\n  const createShipmentFunc = async () => {\n    const shipment = await createShipmentWebflow(orderToBeShipped);\n    console.log(shipment)\n    if(shipment === \"error\" || shipment === undefined) {\n      setCannotProcess(true)\n    } else {\n      if (shipment.id) {\n        setLoading(true);\n        setTimeout(() => {\n          const shipmentBought = buyShipment(shipment.id);\n          shipmentBought.then((res) => {\n            if (res) {\n              setTimeout(() => {\n                const getShipmentInfo = getShipment(shipment.id);\n                getShipmentInfo.then((info) => {\n                  setLoading(false);\n                  add(info.data.shipment.postage_label_png_url);\n                  setComplete(true);\n                });\n              }, 10000);\n            }\n          });\n        }, 9000);\n      }\n    }\n  };\n\n\n  useEffect(() => {\n    // orderToBeShipped.map((item) => {\n    //   if(item.item_name.includes(\"(Pre-order)\")) {\n    //     setPreorder(true)\n    //   }\n    // })\n    if (confirmCreateShipment) {\n      setChecked(true);\n    }\n    if (checked) {\n      createShipmentFunc(orderToBeShipped);\n      addInfo(orderToBeShipped);\n    }\n    // REMOVE FOR STAGING HERE\n    if (shipments) {\n      shipments.data.map((test) => {\n        if (test.order_id === orderToBeShipped.orderId) {\n          setNoShow(true);\n          // if(orderToBeShipped.status == \"refunded\" || test.status == \"refund_approved\") {\n          //   setNoShow(false)\n          // }\n        }\n      });\n    }\n  }, [\n    setRates,\n    setShipId,\n    confirmCreateShipment,\n    setName,\n    setInvalidRate,\n    setLoading,\n    setChecked,\n    checked,\n    setComplete,\n    setNoShow,\n    noShow,\n    setConfirm,\n  ]);\n\n  if (noShow) {\n    return (\n      <div key={orderToBeShipped.orderId} className={`order complete`}>\n        <span className=\"date\">{orderToBeShipped.acceptedOn.substring(0, orderToBeShipped.acceptedOn.length - 14)}</span>\n        <p>Name: {orderToBeShipped.shippingAddress.addressee}</p>\n        <p>Country: {orderToBeShipped.shippingAddress.country}</p>\n        <div className=\"flexContainer\">\n          <p>Items</p>\n          <ul>{item}</ul>\n        </div>\n        <button class=\"tiny-btn\" disabled={added} onClick={() => {\n          shipments.data.map((ship) => {\n            if(ship.order_id === orderToBeShipped.orderId) {\n              const getShipmentInfo = getShipment(ship.id);\n              getShipmentInfo.then((info) => {\n                add(info.data.shipment.postage_label_png_url);\n                addInfo(orderToBeShipped)\n                setAdded(true)\n              })\n            }\n          });\n        }}>{!added ? 'Add label for download' : 'Added'}</button>\n      </div>\n    );\n  }\n\n  if(cannotProcess) {\n    return (\n      <div key={orderToBeShipped.orderId} className={`order manual-complete`}>\n        <span className=\"date\">{orderToBeShipped.acceptedOn.substring(0, orderToBeShipped.acceptedOn.length - 14)}</span>\n        <p>Name: {orderToBeShipped.shippingAddress.addressee}</p>\n        <p>Country: {orderToBeShipped.shippingAddress.country}</p>\n        <div className=\"flexContainer\">\n          <p>Items</p>\n          <ul>{item}</ul>\n        </div>\n      </div>\n    );\n  }\n\n  // if(preorder) {\n  //   return (\n  //       <div key={orderToBeShipped.orderId} className={`order blank-out`}>\n  //         {/* <span className=\"date\">{orderToBeShipped[0].order_date.substring(0, orderToBeShipped[0].order_date.length - 12)}</span> */}\n  //         <p>Name: {orderToBeShipped.shippingAddress.addressee}</p>\n  //         <p>Country: {orderToBeShipped.shippingAddress.country}</p>\n  //         <div className=\"flexContainer\">\n  //           <p>Items</p>\n  //           <ul>{item}</ul>\n  //         </div>\n  //       </div>\n  //     );\n  // }\n\n  if (loading) {\n    return (\n      <div className=\"order\">\n        <img src={Spinner} alt=\"\" />\n      </div>\n    )\n  } else {\n    return (\n      <div\n        key={orderToBeShipped.orderId}\n        className={`order ${complete ? \"complete\" : \"\"} ${checked ? 'pdf-ready' : ''}`}\n      >\n        <span className=\"date\">{orderToBeShipped.acceptedOn.substring(0, orderToBeShipped.acceptedOn.length - 14)}</span>\n        <p>Name: {orderToBeShipped.shippingAddress.addressee}</p>\n        <p>Country: {orderToBeShipped.shippingAddress.country}</p>\n        <div className=\"flexContainer\">\n          <ul>{item}</ul>\n        </div>\n        <div className=\"individualShip\">\n          <p className=\"tinyText\">Process Individual Shipment</p>\n          <input\n            className=\"checkbox\"\n            onClick={handleClick}\n            onChange={() => (confirmCreateShipment = true)}\n            checked={checked}\n            type=\"checkbox\"\n          />\n        </div>\n      </div>\n    );\n  }\n};\n\nWebflowCard.propTypes = {};\n\nexport default WebflowCard;\n","/Users/bcraig/Desktop/idee/src/components/PdfGeneratorWebflow.js",["108","109","110","111"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\nconst PdfGeneratorWebflow = ({ urls, info }) => {\n  \n  info.map((order, i) => {\n    order.url = urls[i];\n  });\n\n  const PdfIdee = () => {\n    return (\n      <Document>\n        {info.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              {order.purchasedItems.map((item) => {\n                if (item.count > 1) {\n                  return (\n                    <Text\n                      style={styles.highlight}\n                    >{`Quanity: ${item.count}, Item: ${item.productName}`}</Text>\n                  );\n                } else {\n                  return (\n                    <Text\n                      style={styles.text}\n                    >{`Quanity: ${item.count}, Item: ${item.productName}`}</Text>\n                  );\n                }\n              })}\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n      paddingVertical: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n      marginTop: 100,\n    },\n    highlight: {\n      backgroundColor: \"yellow\",\n      color: \"red\",\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    text: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n      width: '80%',\n      marginHorizontal: 'auto'\n    },\n    image: {\n      marginVertical: -5,\n      marginHorizontal: 150,\n      transform: \"rotate(90deg)\",\n      height: 500,\n      width: 300\n    },\n  });\n  const todayDate = new Date().toISOString().slice(0,10);\n\n  return (\n    <PDFDownloadLink document={<PdfIdee />} fileName={`${todayDate}.pdf`}>\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  );\n};\n\nexport default PdfGeneratorWebflow;\n","/Users/bcraig/Desktop/idee/src/components/WebflowButton.js",["112"],"import React from \"react\";\nimport { markAsShippedWebflow } from \"../apis/webflow\";\n\nexport default function WebflowButton({ unfilledOrders, shipments }) {\n  if (shipments) {\n    return (\n      <button className=\"webflowBtn\"\n        onClick={async () => {\n          const result = window.confirm(\n            \"Mark All Shipments With A Status Of Inducted/Recevied/Released As Shipped Via Bandcamp?\"\n          );\n          if (result) {\n            shipments.data.map((shipment) => {\n              if (shipment.status === \"inducted\" || shipment.status === \"received\" || shipment.status === \"released\" || shipment.status === \"delivered\") {\n                markAsShippedWebflow(shipment.order_id, shipment.tracking_url);\n              }\n            });\n            document.getElementsByClassName('webflowBtn')[0].innerHTML = 'Refresh Window In a Few Seconds'\n          }\n        }}\n      >\n        Send Confirmation and Mark As Shipped\n      </button>\n    );\n  } else {\n    return false;\n  }\n}\n",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":46,"nodeType":"119","messageId":"120","endLine":3,"endColumn":59},{"ruleId":"117","severity":1,"message":"121","line":21,"column":33,"nodeType":"119","messageId":"120","endLine":21,"endColumn":57},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"123","line":5,"column":3,"nodeType":"119","messageId":"120","endLine":5,"endColumn":7},{"ruleId":"117","severity":1,"message":"124","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":16,"column":23,"nodeType":"127","messageId":"128","endLine":16,"endColumn":25},{"ruleId":"117","severity":1,"message":"129","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"130","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":17},{"ruleId":"117","severity":1,"message":"131","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":15},{"ruleId":"117","severity":1,"message":"132","line":10,"column":10,"nodeType":"119","messageId":"120","endLine":10,"endColumn":16},{"ruleId":"117","severity":1,"message":"133","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":14},{"ruleId":"117","severity":1,"message":"134","line":12,"column":10,"nodeType":"119","messageId":"120","endLine":12,"endColumn":21},{"ruleId":"117","severity":1,"message":"135","line":17,"column":10,"nodeType":"119","messageId":"120","endLine":17,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":66,"column":33,"nodeType":"127","messageId":"128","endLine":66,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":81,"column":33,"nodeType":"127","messageId":"128","endLine":81,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":84,"column":26,"nodeType":"138","messageId":"139","endLine":84,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":90,"column":6,"nodeType":"142","endLine":103,"endColumn":4,"suggestions":"143"},{"ruleId":"125","severity":1,"message":"126","line":156,"column":37,"nodeType":"127","messageId":"128","endLine":156,"endColumn":39},{"ruleId":"140","severity":1,"message":"144","line":13,"column":6,"nodeType":"142","endLine":13,"endColumn":28,"suggestions":"145"},{"ruleId":"117","severity":1,"message":"146","line":14,"column":9,"nodeType":"119","messageId":"120","endLine":14,"endColumn":18},{"ruleId":"125","severity":1,"message":"147","line":31,"column":68,"nodeType":"127","messageId":"148","endLine":31,"endColumn":70},{"ruleId":"117","severity":1,"message":"149","line":92,"column":11,"nodeType":"119","messageId":"120","endLine":92,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":118,"column":50,"nodeType":"127","messageId":"128","endLine":118,"endColumn":52},{"ruleId":"125","severity":1,"message":"147","line":208,"column":54,"nodeType":"127","messageId":"148","endLine":208,"endColumn":56},{"ruleId":"117","severity":1,"message":"149","line":268,"column":11,"nodeType":"119","messageId":"120","endLine":268,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":294,"column":36,"nodeType":"127","messageId":"128","endLine":294,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":350,"column":19,"nodeType":"138","messageId":"139","endLine":350,"endColumn":21},{"ruleId":"117","severity":1,"message":"150","line":6,"column":11,"nodeType":"119","messageId":"120","endLine":6,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":17,"column":43,"nodeType":"127","messageId":"128","endLine":17,"endColumn":45},{"ruleId":"117","severity":1,"message":"130","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":17},{"ruleId":"117","severity":1,"message":"131","line":8,"column":10,"nodeType":"119","messageId":"120","endLine":8,"endColumn":15},{"ruleId":"117","severity":1,"message":"132","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":16},{"ruleId":"117","severity":1,"message":"133","line":10,"column":10,"nodeType":"119","messageId":"120","endLine":10,"endColumn":14},{"ruleId":"117","severity":1,"message":"134","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":21},{"ruleId":"117","severity":1,"message":"135","line":16,"column":10,"nodeType":"119","messageId":"120","endLine":16,"endColumn":17},{"ruleId":"117","severity":1,"message":"151","line":17,"column":10,"nodeType":"119","messageId":"120","endLine":17,"endColumn":18},{"ruleId":"117","severity":1,"message":"152","line":17,"column":20,"nodeType":"119","messageId":"120","endLine":17,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":81,"column":33,"nodeType":"127","messageId":"128","endLine":81,"endColumn":35},{"ruleId":"140","severity":1,"message":"141","line":90,"column":6,"nodeType":"142","endLine":103,"endColumn":4,"suggestions":"153"},{"ruleId":"125","severity":1,"message":"126","line":116,"column":37,"nodeType":"127","messageId":"128","endLine":116,"endColumn":39},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"123","line":5,"column":3,"nodeType":"119","messageId":"120","endLine":5,"endColumn":7},{"ruleId":"117","severity":1,"message":"124","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":16,"column":23,"nodeType":"127","messageId":"128","endLine":16,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":13,"column":43,"nodeType":"127","messageId":"128","endLine":13,"endColumn":45},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'setConfirmCreateShipment' is assigned a value but never used.","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Button' is defined but never used.","'PropTypes' is defined but never used.","'rates' is assigned a value but never used.","'shipId' is assigned a value but never used.","'name' is assigned a value but never used.","'invalidRate' is assigned a value but never used.","'confirm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'createShipmentFunc', 'orderToBeShipped', and 'shipments'. Either include them or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["157"],"'prevCount' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'amount' is assigned a value but never used.","'markShipped' is assigned a value but never used.","'preorder' is assigned a value but never used.","'setPreorder' is assigned a value but never used.",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, setPreorder, orderToBeShipped, shipments, createShipmentFunc, addInfo]",{"range":"165","text":"166"},"Update the dependencies array to be: [setCount, setConfirm, count]",{"range":"167","text":"168"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, noShow, setConfirm, shipments, createShipmentFunc, orderToBeShipped, addInfo]",{"range":"169","text":"170"},[2856,3059],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, setConfirm, setPreorder, orderToBeShipped, shipments, createShipmentFunc, addInfo]",[453,475],"[setCount, setConfirm, count]",[2916,3115],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, setChecked, checked, setComplete, setNoShow, noShow, setConfirm, shipments, createShipmentFunc, orderToBeShipped, addInfo]"]