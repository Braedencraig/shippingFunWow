[{"/Users/bcraig/Desktop/idee/src/index.js":"1","/Users/bcraig/Desktop/idee/src/App.js":"2","/Users/bcraig/Desktop/idee/src/reportWebVitals.js":"3","/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js":"4","/Users/bcraig/Desktop/idee/src/components/Card.js":"5","/Users/bcraig/Desktop/idee/src/apis/bandcamp.js":"6","/Users/bcraig/Desktop/idee/src/components/Button.js":"7","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js":"8","/Users/bcraig/Desktop/idee/src/apis/chitchats.js":"9"},{"size":500,"mtime":1606789933533,"results":"10","hashOfConfig":"11"},{"size":2001,"mtime":1611619978796,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606789933534,"results":"13","hashOfConfig":"11"},{"size":2280,"mtime":1611617657308,"results":"14","hashOfConfig":"11"},{"size":3806,"mtime":1611621155144,"results":"15","hashOfConfig":"11"},{"size":3213,"mtime":1611616142960,"results":"16","hashOfConfig":"11"},{"size":807,"mtime":1611619788198,"results":"17","hashOfConfig":"11"},{"size":2463,"mtime":1611619154843,"results":"18","hashOfConfig":"11"},{"size":3571,"mtime":1611621029733,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"s4sshl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bcraig/Desktop/idee/src/index.js",[],["44","45"],"/Users/bcraig/Desktop/idee/src/App.js",["46"],"import React, { useEffect, useState } from \"react\";\nimport { action, createStore, StoreProvider, useStoreState } from 'easy-peasy'\nimport { getCredentials, getBands, getOrdersUnshipped } from './apis/bandcamp'\nimport Card from './components/Card'\nimport Button from './components/Button'\nimport Spinner from './spinner.gif'\nimport \"./App.css\";\n\nrequire('dotenv').config()\n\nfunction App() {\n  const [unfilledOrders, setUnfilledOrders] = useState(null)\n  const [confirmCreateShipment, setConfirmCreateShipment] = useState(false)\n\n  const store = createStore({\n    pngs: {\n      urls: [],\n      info: [],\n      add: action((state, payload) => {\n        state.urls.push(payload);\n      }),\n      addInfo: action((state, payload) => {\n        state.info.push(payload);\n      }),\n    },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const clientCreds = await getCredentials();\n      const accessTkn = clientCreds?.data.access_token;\n      const bands = await getBands(accessTkn);\n      const ordersUnshipped  = await getOrdersUnshipped(accessTkn, bands)\n      setUnfilledOrders(ordersUnshipped?.data.items)\n    }\n    fetchData()\n  }, [])\n  \n  return (\n    <div className=\"App\">\n      <StoreProvider store={store}>\n        <div className=\"toBeShipped\">\n          <h2>Orders To Be Shipped: {unfilledOrders === null ? '' : unfilledOrders.length}</h2>\n          <h3>Create and purchsed shipments for all orders below in chitchats</h3>\n          <button onClick={() => {\n            const result = window.confirm('Are you sure?')\n            setConfirmCreateShipment(result)\n          }}>CLICK HERE</button>\n\n          {unfilledOrders === null ? ( <img src={Spinner} alt=\"\"/>) : unfilledOrders.map((orderToBeShipped, idx) => { \n            return (\n                <Card idx={idx} orderToBeShipped={orderToBeShipped} confirmCreateShipment={confirmCreateShipment} />\n            )\n          })}\n          <Button />\n        </div>\n      </StoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/bcraig/Desktop/idee/src/reportWebVitals.js",[],"/Users/bcraig/Desktop/idee/src/components/PdfGenerator.js",["47","48","49","50"],"import React, { useEffect } from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  PDFDownloadLink,\n  Font,\n} from \"@react-pdf/renderer\";\nimport logo from \"../logo.svg\";\n\n// Create Document Component\nconst PdfGenerator = ({ todo, todoInfo }) => {\n  todoInfo.map((single, i) => {\n    single.url = todo[i]\n  })\n  \n  const Quixote = () => {\n    return (\n      <Document>\n        {todoInfo.map((order, i) => {\n          return (\n            <Page style={styles.body}>\n              <Image style={styles.image} src={order.url} />\n              <Text style={styles.title}>Packing List</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n              <Text style={styles.author}>{order.item_name}</Text>\n            </Page>\n          );\n        })}\n      </Document>\n    );\n  };\n\n  Font.register({\n    family: \"Oswald\",\n    src: \"https://fonts.gstatic.com/s/oswald/v13/Y_TKV6o8WovbUd3m_X9aAA.ttf\",\n  });\n\n  const styles = StyleSheet.create({\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingHorizontal: 0,\n    },\n    title: {\n      fontSize: 24,\n      textAlign: \"center\",\n      fontFamily: \"Oswald\",\n      marginBottom: 10,\n    },\n    author: {\n      fontSize: 12,\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    subtitle: {\n      fontSize: 18,\n      margin: 12,\n      fontFamily: \"Oswald\",\n    },\n    text: {\n      margin: 12,\n      fontSize: 14,\n      textAlign: \"justify\",\n      fontFamily: \"Times-Roman\",\n    },\n    image: {\n      marginVertical: -20,\n      marginHorizontal: 100,\n      transform: \"rotate(90deg)\",\n    },\n    header: {\n      fontSize: 12,\n      marginBottom: 20,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n    pageNumber: {\n      position: \"absolute\",\n      fontSize: 12,\n      bottom: 30,\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      color: \"grey\",\n    },\n  });\n\n  return (\n    <PDFDownloadLink document={<Quixote />} fileName=\"somename.pdf\">\n      {({ blob, url, loading, error }) =>\n        loading ? \"Loading document...\" : \"Download now!\"\n      }\n    </PDFDownloadLink>\n  );\n};\n\nexport default PdfGenerator;\n","/Users/bcraig/Desktop/idee/src/components/Card.js",["51","52"],"/Users/bcraig/Desktop/idee/src/apis/bandcamp.js",["53"],"import axios from \"axios\";\n// ADD TRY CATCHES TO ALL API CALLS\n// handle the 400 bad request here to call again\n\nexport const getCredentials = async () => {\n    const client_id = process.env.REACT_APP_BANDCAMP_CLIENT_ID;\n    const client_secret = process.env.REACT_APP_BANDCAMP_CLIENT_SECRET;\n    const dataType = \"json\";\n    const grant_type = \"client_credentials\";\n    const credentials = await axios.post(\n      `/oauth_token`,\n      null,\n      {\n        params: {\n          client_id,\n          client_secret,\n          dataType,\n          grant_type,\n        },\n      }\n    );\n    if(credentials.status === 200) {\n      return credentials;\n    }\n    if(credentials.status === 400) {\n      const retry = await axios.post(\n        `/oauth_token`,\n        null,\n        {\n          params: {\n            client_id,\n            client_secret,\n            dataType,\n            grant_type,\n          },\n        }\n      );\n      return retry;\n    }\n};\n\nexport const getBands = async (token) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    // const bodyParameters = {\n    //   key: \"value\",\n    // };\n    const getBands = await axios.post(\n      \"/api/account/1/my_bands\",\n      null,\n      config\n    );\n    return getBands;\n};\n\nexport const getOrdersUnshipped = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      unshipped_only: true,\n    };\n    const allOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allOrders\n}\n\nexport const getAllRecentOrders = async (token, bands) => {\n    const config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    const oneMonthsAgo = new Date();\n    oneMonthsAgo.setMonth(oneMonthsAgo.getMonth() - 1);\n    const recentDateFrom = `${oneMonthsAgo.getFullYear()}-${oneMonthsAgo.getMonth()}-01`\n    \n    const params = {\n      band_id: bands.data.bands[2].band_id,\n      start_time: recentDateFrom\n    };\n    const allRecentOrders = await axios.post(\n      \"/api/merchorders/3/get_orders\",\n      params,\n      config\n    );\n    return allRecentOrders\n}\n\nexport const markAsShipped = async (token, orderToBeShipped, trackingUrl) => {\n  // THIS WORKS DONT USE BECAUSE IT FUCKS SHIT UP, ask alex to make a bunch of fake orders so I can mark as shipped?!?!?!?!\n  // WHEN inducted/released, click buttton that takes all orders that are received and then markAsShipped, inducted on clikc, then send mark as shipped.\n  // \n  const config = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n  const params = {\n    items: [\n      {\n        id: orderToBeShipped.payment_id,\n        id_type: \"p\",\n        shipped: true,\n        tracking_code: trackingUrl,\n        notification: true,\n        notification_message: `Your items will be shipped within 24 hours! Your tracking url is ${trackingUrl}`\n      }\n    ]\n  }\n    \n  return params\n\n  // const shippedOrder = await axios.post(\n  //   \"/api/merchorders/2/update_shipped\",\n  //   params,\n  //   config\n  // );\n  // console.log(shippedOrder, 'ORDER SHIPPED?!?!')\n  // return shippedOrder\n}","/Users/bcraig/Desktop/idee/src/components/Button.js",["54","55"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useStoreState } from 'easy-peasy'\nimport PdfGenerator from '../components/PdfGenerator'\n\n\n\nconst Button = () => {\n    const [count, setCount] = useState(0);\n    const prevCountRef = useRef();\n    useEffect(() => {\n        prevCountRef.current = count;\n    }, [setCount]);\n    const prevCount = prevCountRef.current;\n\n    let todo = useStoreState((state) => state.pngs.urls);\n    let todoInfo = useStoreState((state) => state.pngs.info);\n\n    return (\n        <>\n        <button onClick={() => {\n            setCount(prevState => prevState + 1)\n        }}>\n            Create shipping pdf/packing download\n        </button>\n        {count > 0 && (<PdfGenerator todo={todo} todoInfo={todoInfo} />)}\n        </>\n    )\n}\n\nexport default Button","/Users/bcraig/Desktop/idee/src/components/ShipmentRates.js",["56"],"import React, { useEffect, useState } from 'react'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport { buyShipment, getShipment } from '../apis/chitchats'\n\nconst ShipmentRates = ({ rates, shipId, idx }) => {\n    let namesOfRates = []\n    rates.map(rate => namesOfRates.push(rate.postage_type))\n    const hasAsendia = namesOfRates.includes('asendia_priority_tracked')\n\n    const [rate, setRate] = useState('')\n    const [shipmentBought, setShipmentBought] = useState(false)\n\n    const add = useStoreActions((actions) => actions.pngs.add)\n\n\n    useEffect(() => {\n    }, [hasAsendia, rates, rate, setShipmentBought])\n\n    return (\n        <>\n        {rates.length !== 0 && !hasAsendia && !shipmentBought ? (\n            <div className='selectShipment'>\n                <h3>Please select an alternative shipment rate, asendia priority tracked unavailable</h3>\n                <label htmlFor=\"rates\">Choose a shipment rate:</label>\n                <select name=\"rates\" id=\"rates\" onChange={(e) => {\n                    setRate(e.target.value)\n                }}>\n                {rates.length !== 0 && rates.map(rate => {\n                    return <option value={rate.postage_type}>{rate.postage_type}</option>\n                })}\n                </select>\n                <button onClick={() => {\n                    const shipmentBought = buyShipment(shipId, rate)\n                    setShipmentBought(true)\n                    shipmentBought.then(res => {\n                        if(res) {\n                            setTimeout(() => {\n                                const getShipmentInfo = getShipment(shipId)\n                                getShipmentInfo.then(info => {\n                                    console.log(info.data.shipment.postage_label_png_url)\n                                    add(info.data.shipment.postage_label_png_url)\n                                })\n                            }, 10000)\n                        }\n                    })\n                    // const errorBoxes = Array.from(document.getElementsByClassName('error'))\n                    // errorBoxes.map(error => {\n                    //     if(Array.from(error.children).length === 9) {\n                    //         error.style.display = 'none'\n                    //     }\n                    // })\n                }}>Buy shipment with selected rate</button>\n            </div>\n        ) : ''}\n        </>\n    )\n}\n\nexport default ShipmentRates","/Users/bcraig/Desktop/idee/src/apis/chitchats.js",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":46,"nodeType":"65","messageId":"66","endLine":2,"endColumn":59},{"ruleId":"63","severity":1,"message":"67","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"68","line":5,"column":3,"nodeType":"65","messageId":"66","endLine":5,"endColumn":7},{"ruleId":"63","severity":1,"message":"69","line":12,"column":8,"nodeType":"65","messageId":"66","endLine":12,"endColumn":12},{"ruleId":"70","severity":1,"message":"71","line":16,"column":28,"nodeType":"72","messageId":"73","endLine":16,"endColumn":30},{"ruleId":"63","severity":1,"message":"74","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":56,"column":8,"nodeType":"77","endLine":56,"endColumn":89,"suggestions":"78"},{"ruleId":"63","severity":1,"message":"79","line":97,"column":9,"nodeType":"65","messageId":"66","endLine":97,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":12,"column":8,"nodeType":"77","endLine":12,"endColumn":18,"suggestions":"81"},{"ruleId":"63","severity":1,"message":"82","line":13,"column":11,"nodeType":"65","messageId":"66","endLine":13,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":2,"column":27,"nodeType":"65","messageId":"66","endLine":2,"endColumn":40},{"ruleId":"63","severity":1,"message":"83","line":8,"column":138,"nodeType":"65","messageId":"66","endLine":8,"endColumn":149},{"ruleId":"63","severity":1,"message":"84","line":95,"column":19,"nodeType":"65","messageId":"66","endLine":95,"endColumn":22},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'useStoreState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'View' is defined but never used.","'logo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addInfo', 'createShipmentFunc', 'name', 'orderToBeShipped', and 'ship_to_name'. Either include them or remove the dependency array. If 'setName' needs the current value of 'ship_to_name', you can also switch to useReducer instead of useState and read 'ship_to_name' in the reducer.","ArrayExpression",["87"],"'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["88"],"'prevCount' is assigned a value but never used.","'buyer_email' is assigned a value but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, ship_to_name, name, createShipmentFunc, orderToBeShipped, addInfo]",{"range":"93","text":"94"},"Update the dependencies array to be: [count, setCount]",{"range":"95","text":"96"},[2325,2406],"[setRates, setShipId, confirmCreateShipment, setName, setInvalidRate, setLoading, ship_to_name, name, createShipmentFunc, orderToBeShipped, addInfo]",[327,337],"[count, setCount]"]